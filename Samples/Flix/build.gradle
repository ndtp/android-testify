import org.jetbrains.kotlin.gradle.dsl.JvmTarget

buildscript {
    ext {
        versions = [
                'compose': [
                        'compilerExt': '1.5.14',
                        'core'       : '1.5.14',
                        'material'   : '1.6.7',
                        'ui'         : '1.6.7',
                ]
        ]
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.plugin.serialization'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
    id 'dev.testify'
    alias(libs.plugins.compose.compiler)
}

secrets {
    defaultPropertiesFileName = 'local.defaults.properties'
}

android {
    namespace 'dev.testify.samples.flix'
    compileSdk 36

    defaultConfig {
        applicationId "dev.testify.samples.flix"
        minSdkVersion 26
        targetSdk 36
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    kotlin {
        compilerOptions {
            jvmTarget.set(JvmTarget.JVM_21)
            freeCompilerArgs.add("-opt-in=kotlin.time.ExperimentalTime")
        }
    }
    buildFeatures {
        compose true
        buildConfig true
    }
    composeOptions {
        kotlinCompilerExtensionVersion "${versions.compose.compilerExt}"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    lintOptions {
        disable 'UseTomlInstead'
    }
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}

dependencies {

    implementation project(":FlixLibrary")

    // Core Android
    implementation 'androidx.core:core-ktx:1.17.0'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.9.3"
    implementation "androidx.appcompat:appcompat:1.7.1"

    // UI Layer
    def composeBom = platform('androidx.compose:compose-bom:2025.08.01')
    implementation composeBom
    implementation 'androidx.compose.material3:material3:1.3.2'
    implementation 'androidx.compose.ui:ui-tooling-preview'
    implementation 'androidx.activity:activity-compose:1.10.1'
    implementation("io.coil-kt:coil-compose:2.7.0")
    implementation "com.google.accompanist:accompanist-systemuicontroller:0.36.0"
    debugImplementation 'androidx.compose.ui:ui-tooling'
    androidTestImplementation composeBom

    // Dependency injection
    implementation "com.google.dagger:hilt-android:2.57.1"
    kapt "com.google.dagger:hilt-compiler:2.57.1"

    // Navigation
    implementation "androidx.navigation:navigation-compose:2.9.3"
    implementation "androidx.hilt:hilt-navigation-compose:1.2.0"

    implementation("org.jetbrains.kotlinx:kotlinx-datetime:0.7.1")

    implementation "androidx.test.espresso.idling:idling-concurrent:3.7.0"

    // Network Stack
    implementation("io.ktor:ktor-client-core:3.2.3")
    implementation("io.ktor:ktor-client-android:3.2.3")
//    implementation 'io.ktor:ktor-client-serialization:3.2.3'
//    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.9.0'
    implementation("io.ktor:ktor-client-logging:3.2.3")
    implementation("io.ktor:ktor-client-content-negotiation:3.2.3") // Or your specific Ktor version
    implementation("io.ktor:ktor-serialization-kotlinx-json:3.2.3") // Or your specific Ktor version

//    implementation 'io.ktor:ktor-client-logging-jvm:3.2.3'


    // Test Support
    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation project(":Library")
    androidTestImplementation project(path: ":ComposeExtensions")
    androidTestImplementation project(":FullscreenCaptureMethod")
    androidTestImplementation project(":Accessibility")
    androidTestImplementation 'androidx.test.ext:junit:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.7.0'
    androidTestImplementation "androidx.test:rules:1.7.0"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:${versions.compose.ui}"
}

testify {
    autoImplementLibrary false
}
