apply plugin: 'maven-publish'
apply plugin: 'signing'

dokkaJavadoc {
    dokkaSourceSets {
        configureEach {
            includeNonPublic.set(false)
            reportUndocumented.set(false)
            noAndroidSdkLink.set(false)
        }
    }
}

task javadocJar(type: Jar, dependsOn: dokkaJavadoc) {
    archiveClassifier.set('javadoc')
    archiveBaseName.set('testify')
    from dokkaJavadoc.outputDirectory
}

publishing {
    repositories {
        maven {
            def release =  "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshot = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshot : release

            credentials {
                username System.getenv("OSSRH_USERNAME")
                password System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            if (project.hasProperty('android')) {
                from components.release
            } else {
                from components.java
            }

            afterEvaluate {
                groupId = project.ext.pom.publishedGroupId
                artifactId = project.ext.pom.artifact
                version = project.version
            }

            artifact javadocJar
            artifact sourcesJar

            pom {
                name = project.ext.pom.libraryName
                description = project.ext.pom.libraryDescription
                url = project.ext.pom.siteUrl

                licenses {
                    license {
                        name = project.ext.pom.licenseName
                        url = project.ext.pom.licenseUrl
                    }
                }
                developers {
                    developer {
                        name = project.ext.pom.author
                    }
                }
                scm {
                    connection = project.ext.pom.gitUrl
                    developerConnection = project.ext.pom.gitUrl
                    url = project.ext.pom.siteUrl
                }
            }
        }
    }
}

signing {
    def signingKeyId = findProperty("signingKeyId")
    def signingKey = findProperty("signingKey")
    def signingPassword = findProperty("signingPassword")

    required { signingKeyId && signingKey && signingPassword }

    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    sign publishing.publications.maven
}

