"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6617],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>f});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function s(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?s(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):s(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)o=s[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},c=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,s=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(o),d=r,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||s;return o?n.createElement(f,a(a({ref:t},c),{},{components:o})):n.createElement(f,a({ref:t},c))}));function f(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=o.length,a=new Array(s);a[0]=d;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var p=2;p<s;p++)a[p]=o[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},2838:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>p});var n=o(7462),r=(o(7294),o(3905));const s={},a="Using Testify with a ComposeTestRule",i={unversionedId:"extensions/compose/ComposeTestRule",id:"extensions/compose/ComposeTestRule",title:"Using Testify with a ComposeTestRule",description:"A ComposeTestRule is a TestRule that allows you to test and control composables and applications using Compose.",source:"@site/docs/extensions/compose/3-ComposeTestRule.md",sourceDirName:"extensions/compose",slug:"/extensions/compose/ComposeTestRule",permalink:"/android-testify/docs/extensions/compose/ComposeTestRule",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/extensions/compose/3-ComposeTestRule.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Write a test",permalink:"/android-testify/docs/extensions/compose/test"},next:{title:"Changing the font scale",permalink:"/android-testify/docs/extensions/compose/FontScale"}},l={},p=[{value:"Example",id:"example",level:3},{value:"See More",id:"see-more",level:3}],c={toc:p};function u(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"using-testify-with-a-composetestrule"},"Using Testify with a ComposeTestRule"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/kotlin/androidx/compose/ui/test/junit4/ComposeTestRule"},"ComposeTestRule")," is a ",(0,r.kt)("inlineCode",{parentName:"p"},"TestRule")," that allows you to test and control composables and applications using Compose."),(0,r.kt)("p",null,"You can combine a ",(0,r.kt)("inlineCode",{parentName:"p"},"ComposableScreenshotRule")," with a ",(0,r.kt)("inlineCode",{parentName:"p"},"ComposeTestRule")," to manipulate and interact with your Compose layout prior to taking a screenshot."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ComposableScreenshotRule")," has a constructor argument, ",(0,r.kt)("inlineCode",{parentName:"p"},"composeTestRule")," which provides you with a default instance of ",(0,r.kt)("inlineCode",{parentName:"p"},"ComposeTestRule"),", or allows you to provide your own instance. With this ",(0,r.kt)("inlineCode",{parentName:"p"},"composeTestRule")," instance, you can use the ",(0,r.kt)("inlineCode",{parentName:"p"},"ComposeTestRule")," semantics to interact with the UI hierarchy prior to taking screenshots."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"setComposeActions()")," method allows you to manipulate your Compose UI using ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/jetpack/compose/testing#finders"},"Finders")," and ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/jetpack/compose/testing#actions"},"Actions"),"."),(0,r.kt)("p",null,"The provided ",(0,r.kt)("inlineCode",{parentName:"p"},"actions")," lambda will be invoked after the ",(0,r.kt)("inlineCode",{parentName:"p"},"Activity")," is loaded, before any Espresso actions, and before the screenshot is taken."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'   @get:Rule\n   val rule = ComposableScreenshotRule(\n           composeTestRule = createAndroidComposeRule(ComposableTestActivity::class.java)\n       )\n\n   @ScreenshotInstrumentation\n   @Test\n   fun default() {\n       rule\n           .setCompose {\n               var text by remember { mutableStateOf("") }\n               TextField(\n                   value = text,\n                   onValueChange = { text = it },\n                   modifier = Modifier.testTag("field")\n               )\n           }\n           .setComposeActions { composeTestRule ->\n               composeTestRule.onNodeWithTag("field").performTextInput("testify")\n           }\n           .assertSame()\n   }\n')),(0,r.kt)("h3",{id:"see-more"},"See More"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.android.com/reference/kotlin/androidx/compose/ui/test/junit4/ComposeTestRule"},"ComposeTestRule")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://developer.android.com/jetpack/compose/testing"},"Testing your Compose layout"))),(0,r.kt)("hr",null))}u.isMDXComponent=!0}}]);