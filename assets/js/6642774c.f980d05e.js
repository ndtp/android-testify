"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6254],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7801:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={},l="Changing the Locale in a test",c={unversionedId:"recipes/locale",id:"recipes/locale",title:"Changing the Locale in a test",description:"API 24+",source:"@site/docs/recipes/2-locale.md",sourceDirName:"recipes",slug:"/recipes/locale",permalink:"/android-testify/docs/recipes/locale",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/recipes/2-locale.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Taking a screenshot of an area less than that of the entire Activity",permalink:"/android-testify/docs/recipes/view-provider"},next:{title:"Changing the font scale in a test",permalink:"/android-testify/docs/recipes/font-scale"}},p={},u=[{value:"API 24+",id:"api-24",level:2},{value:"API 23 or lower",id:"api-23-or-lower",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"changing-the-locale-in-a-test"},"Changing the Locale in a test"),(0,o.kt)("h2",{id:"api-24"},"API 24+"),(0,o.kt)("p",null,"It is often desirable to test your View or Activity in multiple locales. Testify allows you to dynamically change the locale on a per-test basis. "),(0,o.kt)("p",null,"To begin, if you are targeting an emulator running Android API 24 or higher, your activity under test must implement the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/blob/230607acc598afe7d54f9618d55fdecd0da83800/Library/src/main/java/dev/testify/resources/TestifyResourcesOverride.kt"},"TestifyResourcesOverride")," interface. This allows Testify to attach a new ",(0,o.kt)("inlineCode",{parentName:"p"},"Context")," with the appropriate locale loaded. It is highly recommended that you employ a ",(0,o.kt)("em",{parentName:"p"},"test harness activity")," for this purpose. Please see the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/blob/230607acc598afe7d54f9618d55fdecd0da83800/Sample/src/androidTest/java/dev/testify/sample/test/TestLocaleHarnessActivity.kt"},"TestHarnessActivity")," in the provided Sample."),(0,o.kt)("p",null,"With an Activity which implements ",(0,o.kt)("inlineCode",{parentName:"p"},"TestifyResourcesOverride"),", you can now invoke the ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/blob/230607acc598afe7d54f9618d55fdecd0da83800/Library/src/main/java/dev/testify/ScreenshotRule.kt#L269"},"setLocale")," method on the ",(0,o.kt)("inlineCode",{parentName:"p"},"ScreenshotTestRule"),". ",(0,o.kt)("inlineCode",{parentName:"p"},"setLocale")," accepts any valid ",(0,o.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html"},"Locale")," instance."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Example Test:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class TestLocaleActivityTest {\n\n    @get:Rule var rule = ScreenshotRule(\n        activityClass = TestLocaleHarnessActivity::class.java,\n        launchActivity = false,\n        rootViewId = R.id.harness_root\n    )\n\n    @ScreenshotInstrumentation\n    @TestifyLayout(R.layout.view_client_details)\n    @Test\n    fun testLocaleFrance() {\n        rule\n            .setLocale(Locale.FRANCE)\n            .assertSame()\n    }\n}\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Example Test Harness Activity")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"open class TestHarnessActivity : AppCompatActivity(), TestifyResourcesOverride {\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        setContentView(FrameLayout(this).apply {\n            layoutParams = FrameLayout.LayoutParams(MATCH_PARENT, MATCH_PARENT)\n            id = R.id.harness_root\n        })\n    }\n\n    override fun attachBaseContext(newBase: Context?) {\n        super.attachBaseContext(newBase?.wrap())\n    }\n}\n")),(0,o.kt)("p",null,"Please read this excellent ",(0,o.kt)("a",{parentName:"p",href:"https://proandroiddev.com/change-language-programmatically-at-runtime-on-android-5e6bc15c758"},"blog post")," if you want to better understand how to dynamically adjust Locale in your app. Note that the Testify locale override support is intended for instrumentation testing only and does not provide a suitable solution for your production application."),(0,o.kt)("h2",{id:"api-23-or-lower"},"API 23 or lower"),(0,o.kt)("p",null,"On lower API levels, a test harness activity is not required. You are not required to implement ",(0,o.kt)("inlineCode",{parentName:"p"},"TestifyResourcesOverride"),", but doing so is not harmful."),(0,o.kt)("p",null,"To test with a provided locale, invoke the ",(0,o.kt)("inlineCode",{parentName:"p"},"setLocale")," method on ",(0,o.kt)("inlineCode",{parentName:"p"},"ScreenshotRule")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Example Test:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MainActivityScreenshotTest {\n\n    @get:Rule var rule = ScreenshotRule(MainActivity::class.java)\n\n    @ScreenshotInstrumentation\n    @TestifyLayout(R.layout.view_client_details)\n    @Test\n    fun testLocaleFrance() {\n        rule\n            .setLocale(Locale.FRANCE)\n            .assertSame()\n    }\n}\n")))}m.isMDXComponent=!0}}]);