"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6254],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(h,o(o({ref:t},u),{},{components:n})):a.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:r,o[1]=l;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7385:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}const i=e=>{let{title:t,titleId:n,...i}=e;return a.createElement("svg",r({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 16 16","aria-labelledby":n},i),t?a.createElement("title",{id:n},t):null,a.createElement("path",{style:{stroke:"none",fillRule:"nonzero",fill:"#9e80b5",fillOpacity:1},d:"M3 14a.947.947 0 0 1-.7-.3.947.947 0 0 1-.3-.7V3c0-.266.098-.5.3-.7.2-.202.434-.3.7-.3h4.652v1H3v10h10V8.348h1V13c0 .266-.098.5-.3.7-.2.202-.434.3-.7.3Zm3.367-3.652-.699-.715L12.301 3H8.652V2H14v5.348h-1V3.715Zm0 0"}))}},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>d});var a=n(7462),r=n(7294),i=n(6010),o=n(2389),l=n(7392),s=n(7094),c=n(2466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:n,defaultValue:o,values:p,groupId:d,className:m}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),y=p??h.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,l.l)(y,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const f=null===o?o:o??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==f&&!y.some((e=>e.value===f)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${f}" but none of its children has the corresponding value. Available values are: ${y.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:g}=(0,s.U)(),[k,T]=(0,r.useState)(f),w=[],{blockElementScrollPositionUntilNextRender:N}=(0,c.o5)();if(null!=d){const e=b[d];null!=e&&e!==k&&y.some((t=>t.value===e))&&T(e)}const C=e=>{const t=e.currentTarget,n=w.indexOf(t),a=y[n].value;a!==k&&(N(t),T(a),null!=d&&g(d,String(a)))},A=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},m)},y.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>w.push(e),onKeyDown:A,onFocus:C,onClick:C},o,{className:(0,i.Z)("tabs__item",u.tabItem,o?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function d(e){const t=(0,o.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},7801:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>c,default:()=>y,frontMatter:()=>s,metadata:()=>u,toc:()=>d});var a=n(7462),r=(n(7294),n(3905)),i=n(5488),o=n(5162),l=n(7385);const s={},c="Changing the Locale in a test",u={unversionedId:"recipes/locale",id:"recipes/locale",title:"Changing the Locale in a test",description:"API 24+",source:"@site/docs/recipes/2-locale.md",sourceDirName:"recipes",slug:"/recipes/locale",permalink:"/android-testify/docs/recipes/locale",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/recipes/2-locale.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Taking a screenshot of an area less than that of the entire Activity",permalink:"/android-testify/docs/recipes/view-provider"},next:{title:"Changing the font scale in a test",permalink:"/android-testify/docs/recipes/font-scale"}},p={},d=[{value:"API 24+",id:"api-24",level:2},{value:"ActivityTestRule vs. ActivityScenarioRule",id:"activitytestrule-vs-activityscenariorule",level:3},{value:"API 23 or lower",id:"api-23-or-lower",level:2}],m={toc:d},h="wrapper";function y(e){let{components:t,...n}=e;return(0,r.kt)(h,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"changing-the-locale-in-a-test"},"Changing the Locale in a test"),(0,r.kt)("h2",{id:"api-24"},"API 24+"),(0,r.kt)("p",null,"It is often desirable to test your View or Activity in multiple locales. Testify allows you to dynamically change the locale on a per-test basis. "),(0,r.kt)("p",null,"Please read this excellent ",(0,r.kt)("a",{parentName:"p",href:"https://proandroiddev.com/change-language-programmatically-at-runtime-on-android-5e6bc15c758"},"blog post ",(0,r.kt)(l.Z,{mdxType:"OpenNew"}))," if you want to better understand how to dynamically adjust Locale in your app. Note that the Testify locale override support is intended for instrumentation testing only and does not provide a suitable solution for your production application."),(0,r.kt)("p",null,"To begin, if you are targeting an emulator running Android API 24 or higher, your activity under test must implement the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/blob/main/Library/src/main/java/dev/testify/resources/TestifyResourcesOverride.kt"},"TestifyResourcesOverride")," interface. This allows Testify to attach a new ",(0,r.kt)("inlineCode",{parentName:"p"},"Context")," with the appropriate locale loaded. It is highly recommended that you employ a ",(0,r.kt)("em",{parentName:"p"},"test harness activity")," for this purpose. Please see the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/blob/main/Samples/Legacy/src/androidTest/java/dev/testify/sample/test/TestLocaleHarnessActivity.kt"},"TestLocaleHarnessActivity")," in the provided Sample."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example Test Harness Activity")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"open class TestHarnessActivity : AppCompatActivity(), TestifyResourcesOverride {\n\n    /**\n     * This is required to correctly support dynamic Locale changes\n     *\n     * See [TestingResourceConfigurationsExampleTest]\n     */\n    override fun attachBaseContext(newBase: Context?) {\n        super.attachBaseContext(newBase?.wrap())\n    }\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n\n        setContentView(FrameLayout(this).apply {\n            layoutParams = FrameLayout.LayoutParams(MATCH_PARENT, MATCH_PARENT)\n            id = R.id.harness_root\n        })\n    }\n}\n")),(0,r.kt)("h3",{id:"activitytestrule-vs-activityscenariorule"},"ActivityTestRule vs. ActivityScenarioRule"),(0,r.kt)("p",null,"With an Activity which implements ",(0,r.kt)("inlineCode",{parentName:"p"},"TestifyResourcesOverride"),", and if you are using ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotRule")," (a subclass of ",(0,r.kt)("inlineCode",{parentName:"p"},"ActivityTestRule"),"), you can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"locale")," field on method on the ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotTestRule"),". ",(0,r.kt)("inlineCode",{parentName:"p"},"TestifyConfiguration.locale")," can be set to any valid ",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html"},"java.util.Locale ",(0,r.kt)(l.Z,{mdxType:"OpenNew"}))," instance."),(0,r.kt)("p",null,"If you are using ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotScenarioRule")," (which works in conjunction with ",(0,r.kt)("inlineCode",{parentName:"p"},"ActivityScenarioRule"),"), you must use the ",(0,r.kt)("inlineCode",{parentName:"p"},"overrideResourceConfiguration")," helper method. This method must be called before the activity is launched."),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"rule",label:"ScreenshotTestRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"class TestLocaleActivityTest {\n\n    @get:Rule var rule = ScreenshotRule(\n        activityClass = TestLocaleHarnessActivity::class.java,\n        launchActivity = false,\n        rootViewId = R.id.harness_root\n    )\n\n    @ScreenshotInstrumentation\n    @TestifyLayout(R.layout.view_client_details)\n    @Test\n    fun testLocaleFrance() {\n        rule\n            .configure {\n                locale = Locale.FRANCE\n            }\n            .assertSame()\n    }\n}\n"))),(0,r.kt)(o.Z,{value:"scenario",label:"ScreenshotScenarioRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MainActivityScreenshotTest {\n\n    @get:Rule val rule = ScreenshotScenarioRule()\n\n    @ScreenshotInstrumentation\n    @TestifyLayout(R.layout.view_client_details)\n    @Test\n    fun testLocaleFrance() {\n        overrideResourceConfiguration<TestLocaleHarnessActivity>(locale = Locale.FRANCE)\n\n        launchActivity<TestLocaleHarnessActivity>().use { scenario ->\n            rule\n                .withScenario(scenario)\n                .assertSame()\n        }\n    }\n}\n")))),(0,r.kt)("h2",{id:"api-23-or-lower"},"API 23 or lower"),(0,r.kt)("p",null,"On lower API levels, a test harness activity is not required. You are not required to implement ",(0,r.kt)("inlineCode",{parentName:"p"},"TestifyResourcesOverride"),", but doing so is not harmful."),(0,r.kt)("p",null,"To test with a provided locale, invoke the ",(0,r.kt)("inlineCode",{parentName:"p"},"setLocale")," method on ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotRule")),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Example Test:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"class MainActivityScreenshotTest {\n\n    @get:Rule var rule = ScreenshotRule(MainActivity::class.java)\n\n    @ScreenshotInstrumentation\n    @TestifyLayout(R.layout.view_client_details)\n    @Test\n    fun testLocaleFrance() {\n        rule\n            .setLocale(Locale.FRANCE)\n            .assertSame()\n    }\n}\n")))}y.isMDXComponent=!0}}]);