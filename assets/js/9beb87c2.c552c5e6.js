"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[80],{3905:(e,t,i)=>{i.d(t,{Zo:()=>p,kt:()=>k});var a=i(7294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function l(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?l(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):l(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function o(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)i=l[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)i=l[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var d=a.createContext({}),s=function(e){var t=a.useContext(d),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,l=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(i),c=n,k=u["".concat(d,".").concat(c)]||u[c]||m[c]||l;return i?a.createElement(k,r(r({ref:t},p),{},{components:i})):a.createElement(k,r({ref:t},p))}));function k(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=i.length,r=new Array(l);r[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[u]="string"==typeof e?e:n,r[1]=o;for(var s=2;s<l;s++)r[s]=i[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}c.displayName="MDXCreateElement"},1016:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=i(7462),n=(i(7294),i(3905));const l={sidebar_position:5},r="Change Log",o={unversionedId:"changelog",id:"changelog",title:"Change Log",description:"3.2.2",source:"@site/docs/changelog.md",sourceDirName:".",slug:"/changelog",permalink:"/android-testify/docs/changelog",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/changelog.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Configuring Testify for Android Library Projects",permalink:"/android-testify/docs/recipes/library-projects"},next:{title:"Migrate to Testify 2.0",permalink:"/android-testify/docs/migration"}},d={},s=[{value:"3.2.2",id:"322",level:2},{value:"3.2.1",id:"321",level:2},{value:"3.2.0",id:"320",level:2},{value:"3.1.0",id:"310",level:2},{value:"3.0.0",id:"300",level:2},{value:"2.0.0",id:"200",level:2},{value:"2.0.0-rc03",id:"200-rc03",level:2},{value:"Library",id:"library",level:3},{value:"Fixed",id:"fixed",level:4},{value:"Legacy Sample",id:"legacy-sample",level:3},{value:"Added",id:"added",level:4},{value:"2.0.0-rc02",id:"200-rc02",level:2},{value:"Library",id:"library-1",level:3},{value:"Fixed",id:"fixed-1",level:4},{value:"2.0.0-rc01",id:"200-rc01",level:2},{value:"Library",id:"library-2",level:3},{value:"Changed",id:"changed",level:4},{value:"Added",id:"added-1",level:4},{value:"Removed",id:"removed",level:4},{value:"Fixed",id:"fixed-2",level:4},{value:"2.0.0-beta04",id:"200-beta04",level:2},{value:"Library",id:"library-3",level:3},{value:"Changed",id:"changed-1",level:4},{value:"Fixed",id:"fixed-3",level:4},{value:"Added",id:"added-2",level:4},{value:"2.0.0-beta03",id:"200-beta03",level:2},{value:"All Projects",id:"all-projects",level:3},{value:"Updates",id:"updates",level:4},{value:"Library",id:"library-4",level:3},{value:"Changed",id:"changed-2",level:4},{value:"Bug fixes",id:"bug-fixes",level:4},{value:"Added",id:"added-3",level:4},{value:"Sample",id:"sample",level:3},{value:"Changed",id:"changed-3",level:4},{value:"Gradle Plugin",id:"gradle-plugin",level:3},{value:"Added",id:"added-4",level:4},{value:"Compose Extension",id:"compose-extension",level:3},{value:"2.0.0-beta01",id:"200-beta01",level:2},{value:"Library",id:"library-5",level:3},{value:"Added",id:"added-5",level:4},{value:"Removed",id:"removed-1",level:4},{value:"Changed",id:"changed-4",level:4},{value:"Plugin",id:"plugin",level:3},{value:"Changed",id:"changed-5",level:4},{value:"Removed",id:"removed-2",level:4},{value:"All Projects",id:"all-projects-1",level:3},{value:"Updates",id:"updates-1",level:4},{value:"Sample",id:"sample-1",level:3},{value:"Updates",id:"updates-2",level:4},{value:"Fullscreen Extension Library",id:"fullscreen-extension-library",level:3},{value:"Accessibility Checks Extension Library",id:"accessibility-checks-extension-library",level:3},{value:"2.0.0-alpha02",id:"200-alpha02",level:2},{value:"Compose Extension Library",id:"compose-extension-library",level:3},{value:"Changed",id:"changed-6",level:4},{value:"Added",id:"added-6",level:4},{value:"Fullscreen Extension Library",id:"fullscreen-extension-library-1",level:3},{value:"Accessibility Checks Extension Library",id:"accessibility-checks-extension-library-1",level:3},{value:"2.0.0-alpha01",id:"200-alpha01",level:2},{value:"1.2.0-alpha01",id:"120-alpha01",level:2},{value:"Library",id:"library-6",level:3},{value:"Updates",id:"updates-3",level:4},{value:"Gradle Plugin",id:"gradle-plugin-1",level:3},{value:"Updates",id:"updates-4",level:4},{value:"Sample",id:"sample-2",level:3},{value:"Added",id:"added-7",level:4},{value:"Updates",id:"updates-5",level:4},{value:"1.1.0",id:"110",level:2},{value:"1.1.0-rc01",id:"110-rc01",level:2},{value:"Library",id:"library-7",level:3},{value:"Bug fixes",id:"bug-fixes-1",level:4},{value:"Added",id:"added-8",level:4},{value:"Changes",id:"changes",level:4},{value:"1.1.0-beta3",id:"110-beta3",level:2},{value:"Library",id:"library-8",level:3},{value:"Gradle Plugin",id:"gradle-plugin-2",level:3},{value:"Bug fixes",id:"bug-fixes-2",level:4},{value:"Library",id:"library-9",level:3},{value:"Changes",id:"changes-1",level:4},{value:"1.1.0-beta2",id:"110-beta2",level:2},{value:"Library",id:"library-10",level:3},{value:"Bug fixes",id:"bug-fixes-3",level:4},{value:"Updates",id:"updates-6",level:4},{value:"Sample",id:"sample-3",level:3},{value:"Changes",id:"changes-2",level:4},{value:"1.1.0-beta1",id:"110-beta1",level:2},{value:"Library",id:"library-11",level:3},{value:"Changes",id:"changes-3",level:4},{value:"Added",id:"added-9",level:4},{value:"Updates:",id:"updates-7",level:4},{value:"Gradle Plugin",id:"gradle-plugin-3",level:3},{value:"Added",id:"added-10",level:4},{value:"Sample",id:"sample-4",level:3},{value:"Updates:",id:"updates-8",level:4},{value:"1.0.0-rc3",id:"100-rc3",level:2},{value:"Library",id:"library-12",level:3},{value:"Changes",id:"changes-4",level:4},{value:"Added",id:"added-11",level:4},{value:"1.0.0-rc2",id:"100-rc2",level:2},{value:"Library",id:"library-13",level:3},{value:"Bug fixes",id:"bug-fixes-4",level:4},{value:"Updates",id:"updates-9",level:4},{value:"Gradle Plugin",id:"gradle-plugin-4",level:3},{value:"Bug fixes",id:"bug-fixes-5",level:4},{value:"Sample App",id:"sample-app",level:3},{value:"1.0.0-rc1",id:"100-rc1",level:2},{value:"Changes",id:"changes-5",level:4},{value:"Library",id:"library-14",level:3},{value:"Bug fixes",id:"bug-fixes-6",level:4},{value:"Plugin",id:"plugin-1",level:3},{value:"Changed",id:"changed-7",level:4},{value:"1.0.0-beta5",id:"100-beta5",level:2},{value:"Library",id:"library-15",level:3},{value:"New",id:"new",level:4},{value:"Updates",id:"updates-10",level:3},{value:"1.0.0-beta4 -- June 17, 2020",id:"100-beta4----june-17-2020",level:2},{value:"Plugin",id:"plugin-2",level:3},{value:"New",id:"new-1",level:4},{value:"Library",id:"library-16",level:3},{value:"Bug fixes",id:"bug-fixes-7",level:4},{value:"1.0.0-beta3 -- June 11, 2020",id:"100-beta3----june-11-2020",level:2},{value:"Library",id:"library-17",level:3},{value:"Bug Fixes",id:"bug-fixes-8",level:4},{value:"1.0.0-beta2 -- May 20, 2020",id:"100-beta2----may-20-2020",level:2},{value:"Library",id:"library-18",level:3},{value:"Bug Fixes",id:"bug-fixes-9",level:4},{value:"1.0.0-beta1 -- May 2, 2020",id:"100-beta1----may-2-2020",level:2},{value:"Library",id:"library-19",level:3},{value:"New",id:"new-2",level:4},{value:"Bug Fixes",id:"bug-fixes-10",level:4},{value:"Testing changes",id:"testing-changes",level:4},{value:"Updates",id:"updates-11",level:4},{value:"Plugin:",id:"plugin-3",level:3},{value:"New",id:"new-3",level:4},{value:"Bug Fixes",id:"bug-fixes-11",level:4},{value:"Testing changes",id:"testing-changes-1",level:4},{value:"Updates",id:"updates-12",level:4},{value:"Sample App:",id:"sample-app-1",level:3},{value:"1.0.0-alpha1 - April 5, 2019",id:"100-alpha1---april-5-2019",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...i}=e;return(0,n.kt)(u,(0,a.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"change-log"},"Change Log"),(0,n.kt)("h2",{id:"322"},"3.2.2"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/251"},"https://github.com/ndtp/android-testify/pull/251")," - A collection of updates to allow the tests to run on modern Apple hardware."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/249"},"https://github.com/ndtp/android-testify/pull/249")," - Fix for #243: ",(0,n.kt)("inlineCode",{parentName:"li"},"expected to be of type static")," errors related to TestStorage API changes"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/252"},"https://github.com/ndtp/android-testify/pull/252")," - Fix for #250: Correct error in GMD documentation"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/253"},"https://github.com/ndtp/android-testify/pull/253")," - Fix for #206: UnexpectedDeviceException thrown because wrong Context being used to determine device orientation"),(0,n.kt)("li",{parentName:"ul"},"Minor changes to Flix Sample documentation to improve clarity of the requirements")),(0,n.kt)("h2",{id:"321"},"3.2.1"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Fix #244 "GMD recordMode not working as expected" ',(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/248"},"https://github.com/ndtp/android-testify/pull/248")," - Update ManifestHelper to use alternate version of getApplicationInfo "))),(0,n.kt)("li",{parentName:"ul"},"Respect Gradle console mode. See ",(0,n.kt)("a",{parentName:"li",href:"https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_customizing_log_format"},"https://docs.gradle.org/current/userguide/command_line_interface.html#sec:command_line_customizing_log_format")," for more information.")),(0,n.kt)("h2",{id:"320"},"3.2.0"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/231"},"https://github.com/ndtp/android-testify/pull/231")," - Replace Plugin-Local with Composite Build")),(0,n.kt)("h2",{id:"310"},"3.1.0"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/226"},"https://github.com/ndtp/android-testify/pull/226")," - Testify will now throw a ",(0,n.kt)("inlineCode",{parentName:"li"},"LowMemoryException")," when attempts to allocate an ",(0,n.kt)("inlineCode",{parentName:"li"},"IntBuffer")," fail. This can help users diagnose AVD configuration problems and reports on the state of the device.")),(0,n.kt)("h2",{id:"300"},"3.0.0"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/224"},"https://github.com/ndtp/android-testify/pull/224")," - Upgrade to Kotlin 1.9.24 and Compose to 2024.05.00",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Fix several warnings"),(0,n.kt)("li",{parentName:"ul"},"Upgrade dependencies on sample apps"),(0,n.kt)("li",{parentName:"ul"},"Warning: The January '24 update to Compose introduces changes to the default font padding which impacts any Compose-base tests that use text. ",(0,n.kt)("a",{parentName:"li",href:"https://android-developers.googleblog.com/2024/01/whats-new-in-jetpack-compose-january-24-release.html"},"https://android-developers.googleblog.com/2024/01/whats-new-in-jetpack-compose-january-24-release.html")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/219"},"https://github.com/ndtp/android-testify/pull/219")," - Upgrade to Gradle 8.6 and AGP 8.4.1",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Define namespace in build.gradle for library projects"),(0,n.kt)("li",{parentName:"ul"},"jvmTarget, sourceCompatibility and targetCompatibility set to Java 17"),(0,n.kt)("li",{parentName:"ul"},"Replace sourcesJar task with android publishing closure"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/212"},"https://github.com/ndtp/android-testify/pull/212")," - Bug fixes and performance improvements for the ParallelPixelProcessor",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Add parallelThreads extension property to the Gradle plugin. This allows for customization of the number of worker threads to be used by the ParallelProcessor. Set limits on the thread pool to a minimum of 1 and a maximum of 4."),(0,n.kt)("li",{parentName:"ul"},"Refactor the ParallelPixelProcessor and introduce a new configuration class to wrap the thread configuration variables and the CoroutineDispatcher configuration."),(0,n.kt)("li",{parentName:"ul"},"Several small improvements to the FuzzyCompare method to perform fewer allocations inside the analyze function"),(0,n.kt)("li",{parentName:"ul"},"Upgrade UiAutomator dependency to 2.3.0 ",(0,n.kt)("a",{parentName:"li",href:"https://developer.android.com/jetpack/androidx/releases/test-uiautomator"},"https://developer.android.com/jetpack/androidx/releases/test-uiautomator")),(0,n.kt)("li",{parentName:"ul"},"Recycle the bitmaps in the finalize block of assertSame()"),(0,n.kt)("li",{parentName:"ul"},"Add several new tests and enhancements to the existing ParallelProcessor tests"),(0,n.kt)("li",{parentName:"ul"},"Upgrade the compile SDK for the samples to 34"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/208"},"https://github.com/ndtp/android-testify/pull/208")," - Redefine plugin artifact to work with gradle plugin DSL"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/201"},"https://github.com/ndtp/android-testify/pull/201")," - Added ScreenshotScenarioRule which works in conjunction with Android's ActivityScenario.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Added tests demonstrating the usage of ScreenshotScenarioRule."),(0,n.kt)("li",{parentName:"ul"},"Major overhaul of all documentation to include alternative instructions for using ScreenshotScenarioRule."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/198-"},"https://github.com/ndtp/android-testify/pull/198-")," Fixes ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/issues/79"},"https://github.com/ndtp/android-testify/issues/79"),": Testify incompatible with gradle configuration cache",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"The Testify Gradle Plugin now supports ",(0,n.kt)("a",{parentName:"li",href:"https://docs.gradle.org/current/userguide/configuration_cache.html"},"Gradle Configuration Cache"),"."),(0,n.kt)("li",{parentName:"ul"},"Gradle Plugin now uses Junit5 tests."))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/196"},"https://github.com/ndtp/android-testify/pull/196")," - Flix Library sample added"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/192"},"https://github.com/ndtp/android-testify/pull/192")," - Flix Sample now uses Hilt instead of Koin for dependency injection"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/pull/191"},"https://github.com/ndtp/android-testify/pull/191")," - Added additional method documentation.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200"},"2.0.0"),(0,n.kt)("p",null,"Released without additional changes from 2.0.0-rc03."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-rc03"},"2.0.0-rc03"),(0,n.kt)("h3",{id:"library"},"Library"),(0,n.kt)("h4",{id:"fixed"},"Fixed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Refactor ComposableScreenshotRule.setCaptureMethod() to call the configure() method.")),(0,n.kt)("h3",{id:"legacy-sample"},"Legacy Sample"),(0,n.kt)("h4",{id:"added"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added a Dialog sample to test as a demonstration of how to capture dialog boxes and also as a regression test for the bug with ",(0,n.kt)("inlineCode",{parentName:"li"},"setCaptureMethod()"))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-rc02"},"2.0.0-rc02"),(0,n.kt)("h3",{id:"library-1"},"Library"),(0,n.kt)("h4",{id:"fixed-1"},"Fixed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed a bug in ComposableScreenshotRule.setCaptureMethod() where it was incorrectly ignoring the passed in captureMethod argument.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-rc01"},"2.0.0-rc01"),(0,n.kt)("h3",{id:"library-2"},"Library"),(0,n.kt)("h4",{id:"changed"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.getScreenshotInstrumentationAnnotation()")," is now a top-level function."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Collection<Annotation>.getAnnotation()")," renamed to ",(0,n.kt)("inlineCode",{parentName:"li"},"Collection<Annotation>.findAnnotation()"),"."),(0,n.kt)("li",{parentName:"ul"},"Package for ",(0,n.kt)("inlineCode",{parentName:"li"},"getScreenshotAnnotationName()")," changed from ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.extensions")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.annotation"),"."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.initializeView()")," is now a top-level function."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"EspressoHelper")," now extends ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotLifecycle")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"beforeScreenshot()")," has been replaced with ",(0,n.kt)("inlineCode",{parentName:"li"},"afterInitializeView()")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.assertExpectedDevice")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.assertExpectedDevice")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.Configurable")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.Configurable")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.DEFAULT_FOLDER_FORMAT")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.DEFAULT_FOLDER_FORMAT")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.DEFAULT_NAME_FORMAT")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.DEFAULT_NAME_FORMAT")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.DeviceStringFormatter")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.DeviceStringFormatter")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.ActivityMustImplementResourceOverrideException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.ActivityMustImplementResourceOverrideException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.ActivityNotRegisteredException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.ActivityNotRegisteredException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.AssertSameMustBeLastException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.AssertSameMustBeLastException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.FailedToCaptureBitmapException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.FailedToCaptureBitmapException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.FinalizeDestinationException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.FinalizeDestinationException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.MissingAssertSameException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.MissingAssertSameException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.MissingScreenshotInstrumentationAnnotationException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.MissingScreenshotInstrumentationAnnotationException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.NoScreenshotsOnUiThreadException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.NoScreenshotsOnUiThreadException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.RootViewNotFoundException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.RootViewNotFoundException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.ScreenshotBaselineNotDefinedException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.ScreenshotBaselineNotDefinedException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.ScreenshotIsDifferentException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.ScreenshotIsDifferentException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.ScreenshotTestIgnoredException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.ScreenshotTestIgnoredException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.TestifyException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.TestifyException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.TestMustWrapContextException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.TestMustWrapContextException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.UnexpectedDeviceException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.UnexpectedDeviceException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.UnexpectedOrientationException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.UnexpectedOrientationException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.exception.ViewModificationException")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.exception.ViewModificationException")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.ExclusionRectProvider")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.ExclusionRectProvider")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.formatDeviceString")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.formatDeviceString")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.getDeviceDescription")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.getDeviceDescription")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.getDeviceDimensions")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.getDeviceDimensions")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.logic.AssertionState")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.logic.AssertionState")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.logic.assertSame")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.logic.assertSame")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.logic.compareBitmaps")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.logic.compareBitmaps")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.logic.ScreenshotLifecycleHost")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.logic.ScreenshotLifecycleHost")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.logic.ScreenshotLifecycleObserver")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.logic.ScreenshotLifecycleObserver")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.logic.takeScreenshot")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.logic.takeScreenshot")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor._executorDispatcher")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor._executorDispatcher")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.capture.canvasCapture")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.capture.canvasCapture")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.capture.createBitmapFromDrawingCache")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.capture.createBitmapFromDrawingCache")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.capture.pixelCopyCapture")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.capture.pixelCopyCapture")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.capture.PixelCopyCaptureKt;")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.capture.PixelCopyCaptureKt;")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.compare.colorspace.calculateDeltaE")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.compare.colorspace.calculateDeltaE")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.compare.FuzzyCompare")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.compare.FuzzyCompare")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.compare.sameAsCompare")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.compare.sameAsCompare")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.createBitmap")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.createBitmap")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.diff.HighContrastDiff")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.diff.HighContrastDiff")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.maxNumberOfChunkThreads")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.maxNumberOfChunkThreads")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.processor.ParallelPixelProcessor")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.processor.ParallelPixelProcessor")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.ScreenshotRuleCompatibilityMethods")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.ScreenshotRuleCompatibilityMethods")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.TestifyConfiguration")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.TestifyConfiguration")),(0,n.kt)("li",{parentName:"ul"},"Moved ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.internal.TestName")," to ",(0,n.kt)("inlineCode",{parentName:"li"},"dev.testify.core.TestName")),(0,n.kt)("li",{parentName:"ul"})),(0,n.kt)("h4",{id:"added-1"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"isRunningOnUiThread()")," added as a top-level function."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"outputFileName()")," added as an extension method for ",(0,n.kt)("inlineCode",{parentName:"li"},"Context"),"."),(0,n.kt)("li",{parentName:"ul"},"Interface ",(0,n.kt)("inlineCode",{parentName:"li"},"AssertionState")),(0,n.kt)("li",{parentName:"ul"},"Interface ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotLifecycleHost")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"assertSame()")," is now available as a top-level function, decoupled from ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule"))),(0,n.kt)("h4",{id:"removed"},"Removed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"open fun  ScreenshotRule.generateHighContrastDiff(baselineBitmap: Bitmap, currentBitmap: Bitmap)")," has been removed. Use ",(0,n.kt)("inlineCode",{parentName:"li"},"class HighContrastDiff")," directly."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.applyViewModifications()")," has been removed. Use ",(0,n.kt)("inlineCode",{parentName:"li"},"TestifyConfiguration.applyViewModificationsMainThread()")," instead.")),(0,n.kt)("h4",{id:"fixed-2"},"Fixed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/issues/175"},"#175"),": Output from Gradle Managed Devices now named according to Testify naming strategy")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-beta04"},"2.0.0-beta04"),(0,n.kt)("h3",{id:"library-3"},"Library"),(0,n.kt)("h4",{id:"changed-1"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.getRootView()")," is now an extension function ",(0,n.kt)("inlineCode",{parentName:"li"},"fun Activity.findRootView(@IdRes rootViewId: Int): ViewGroup")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.setCaptureMethod()")," is deprecated. Use ",(0,n.kt)("inlineCode",{parentName:"li"},"var captureMethod: CaptureMethod?")," on ",(0,n.kt)("inlineCode",{parentName:"li"},"TestifyConfiguration")," to set the capture method."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.setCompareMethod()")," is deprecated. Use ",(0,n.kt)("inlineCode",{parentName:"li"},"var compareMethod: CompareMethod?")," on ",(0,n.kt)("inlineCode",{parentName:"li"},"TestifyConfiguration")," to set the compare method."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.compareBitmaps()")," is now a top-level function."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.takeScreenshot()")," is now a top-level function.")),(0,n.kt)("h4",{id:"fixed-3"},"Fixed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/issues/163"},"#163"),": Do not throw UnexpectedDeviceException if an expected baseline exists")),(0,n.kt)("h4",{id:"added-2"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added initial support of Gradle managed devices")),(0,n.kt)("h2",{id:"200-beta03"},"2.0.0-beta03"),(0,n.kt)("h3",{id:"all-projects"},"All Projects"),(0,n.kt)("h4",{id:"updates"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Android Gradle Plugin to 7.4.1"),(0,n.kt)("li",{parentName:"ul"},"Android Material ",(0,n.kt)("inlineCode",{parentName:"li"},"material")," to 1.9.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX ",(0,n.kt)("inlineCode",{parentName:"li"},"activity-compose")," to 1.7.1"),(0,n.kt)("li",{parentName:"ul"},"AndroidX ",(0,n.kt)("inlineCode",{parentName:"li"},"appcompat")," to 1.6.1"),(0,n.kt)("li",{parentName:"ul"},"AndroidX ",(0,n.kt)("inlineCode",{parentName:"li"},"core")," to 1.10.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX ",(0,n.kt)("inlineCode",{parentName:"li"},"lifecycle-runtime-ktx")," to 2.6.1"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test ",(0,n.kt)("inlineCode",{parentName:"li"},"espresso-accessibility"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"espresso-core"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"espresso-contrib")," to 3.5.1"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test ",(0,n.kt)("inlineCode",{parentName:"li"},"junit")," to 1.1.5"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test ",(0,n.kt)("inlineCode",{parentName:"li"},"monitor")," to 1.6.1"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test ",(0,n.kt)("inlineCode",{parentName:"li"},"rules")," to 1.5.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test ",(0,n.kt)("inlineCode",{parentName:"li"},"runner")," to 1.5.2"),(0,n.kt)("li",{parentName:"ul"},"Compile SDK to 33"),(0,n.kt)("li",{parentName:"ul"},"Dokka to 1.8.10"),(0,n.kt)("li",{parentName:"ul"},"Jetpack Compose ",(0,n.kt)("inlineCode",{parentName:"li"},"compose.ui"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"core"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"material")," to 1.4.3"),(0,n.kt)("li",{parentName:"ul"},"Jetpack Compose Compile to 1.4.7"),(0,n.kt)("li",{parentName:"ul"},"Kotlin to 1.8.21"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"com.android.application")," to 7.4.2"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"com.android.library")," to 7.4.2")),(0,n.kt)("h3",{id:"library-4"},"Library"),(0,n.kt)("h4",{id:"changed-2"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Internal file management is now abstracted through the new ",(0,n.kt)("inlineCode",{parentName:"li"},"Destination")," interface.\nThis interface allows for extensibility and customization of the file handling. It is backwards\ncompatible with\nthe existing SDCard and app data/data directory options.")),(0,n.kt)("h4",{id:"bug-fixes"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fix ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/ndtp/android-testify/issues/81"},"https://github.com/ndtp/android-testify/issues/81"),": ",(0,n.kt)("inlineCode",{parentName:"li"},"reportShow")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"reportPull")," now support\nGradle 7+."),(0,n.kt)("li",{parentName:"ul"},"Exceptions now correctly report the gradle module name of the source of the error.")),(0,n.kt)("h4",{id:"added-3"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Reporter now supports skipped or ignored tests."),(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"enableReporter")," parameter to ",(0,n.kt)("inlineCode",{parentName:"li"},"ComposableScreenshotRule")," constructor")),(0,n.kt)("h3",{id:"sample"},"Sample"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"FlixSample now using Espresso IdlingResource to eliminate screenshot test race condition.")),(0,n.kt)("h4",{id:"changed-3"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"Sample")," has been renamed to ",(0,n.kt)("inlineCode",{parentName:"li"},"LegacySample")," and moved to the ",(0,n.kt)("inlineCode",{parentName:"li"},"Samples/Legacy")," directory.")),(0,n.kt)("h3",{id:"gradle-plugin"},"Gradle Plugin"),(0,n.kt)("h4",{id:"added-4"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Add multi-user support to the Gradle Plugin."),(0,n.kt)("li",{parentName:"ul"},"Use ",(0,n.kt)("inlineCode",{parentName:"li"},"-Puser=<number>")," to override the default user."),(0,n.kt)("li",{parentName:"ul"},"Added unit tests to the ",(0,n.kt)("inlineCode",{parentName:"li"},":Plugin")," project.")),(0,n.kt)("h3",{id:"compose-extension"},"Compose Extension"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed #120 - can set a custom capture method when using ComposableScreenshotRule")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-beta01"},"2.0.0-beta01"),(0,n.kt)("h3",{id:"library-5"},"Library"),(0,n.kt)("h4",{id:"added-5"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"@IgnoreScreenshot")," annotation added",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"An annotation used to ignore screenshots tests. Test will be reported as Skipped."),(0,n.kt)("li",{parentName:"ul"},"Should be used as a more versatile replacement for the ",(0,n.kt)("inlineCode",{parentName:"li"},"orientationToIgnore")," argument\non ",(0,n.kt)("inlineCode",{parentName:"li"},"@ScreenshotInstrumentation")))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.assertSame()")," will now throw an ",(0,n.kt)("inlineCode",{parentName:"li"},"UnexpectedDeviceException")," if a baseline exists\nwith a different device description than that of the currently running device.\nThis can be helpful to catch cases where you may be running a test against the wrong emulator. You\ncan add add ",(0,n.kt)("inlineCode",{parentName:"li"},"-Pdevice=N")," to any Testify Gradle command to target a specific device.")),(0,n.kt)("h4",{id:"removed-1"},"Removed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"orientationToIgnore")," argument on ",(0,n.kt)("inlineCode",{parentName:"li"},"@ScreenshotInstrumentation")," has been removed",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Use ",(0,n.kt)("inlineCode",{parentName:"li"},"@IgnoreScreenshot")," instead")))),(0,n.kt)("h4",{id:"changed-4"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Library tests now use mockk."),(0,n.kt)("li",{parentName:"ul"},"Class ",(0,n.kt)("inlineCode",{parentName:"li"},"DeviceIdentifier.DeviceStringFormatter")," has been migrated to a top-level\nclass, ",(0,n.kt)("inlineCode",{parentName:"li"},"DeviceStringFormatter")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DeviceIdentifier.getDeviceDimensions")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun getDeviceDimensions(context: Context): Pair<Int, Int>")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DeviceIdentifier.getDescription")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun getDeviceDescription(context: Context): String")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"DeviceIdentifier.formatDeviceString")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun formatDeviceString(formatter: DeviceStringFormatter, format: String): String")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OutputFileUtility.doesOutputFileExist")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun doesOutputFileExist(context: Context, filename: String): Boolean")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OutputFileUtility.getFileRelativeToRoot")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun getFileRelativeToRoot(subpath: String, fileName: String, extension: String): String")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OutputFileUtility.getOutputDirectoryPath")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun getOutputDirectoryPath(context: Context): File")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OutputFileUtility.getOutputFilePath")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun getOutputFilePath(context: Context, fileName: String, extension: String = PNG_EXTENSION): String")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OutputFileUtility.getPathRelativeToRoot")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun getPathRelativeToRoot(subpath: String): String")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"OutputFileUtility.useSdCard")," has been replaced by ",(0,n.kt)("inlineCode",{parentName:"li"},"fun useSdCard(arguments: Bundle): Boolean")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.assureScreenshotDirectory")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun assureScreenshotDirectory(context: Context): Boolean")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.createBitmapFromActivity")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun createBitmapFromActivity(activity: Activity, fileName: String, captureMethod: CaptureMethod, screenshotView: View? = activity.window.decorView): Bitmap?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.loadBaselineBitmapForComparison")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun loadBaselineBitmapForComparison(context: Context, testName: String): Bitmap?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.loadBitmapFromAsset")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun loadBitmapFromAsset(context: Context, filePath: String): Bitmap?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.loadBitmapFromFile")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun loadBitmapFromFile(outputPath: String, preferredBitmapOptions: BitmapFactory.Options): Bitmap?")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.preferredBitmapOptions")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"val preferredBitmapOptions: BitmapFactory.Options")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotUtility.saveBitmapToFile")," has been replaced\nby ",(0,n.kt)("inlineCode",{parentName:"li"},"fun saveBitmapToFile(context: Context, bitmap: Bitmap?, outputFilePath: String): Boolean"))),(0,n.kt)("h3",{id:"plugin"},"Plugin"),(0,n.kt)("h4",{id:"changed-5"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"screenshotAnnotation")," setting to the Testify gradle extension, allowing customization of\nthe instrumentation annotation used to identify screenshot tests. This makes the\n@ScreenshotInstrumentation annotation optional.")),(0,n.kt)("h4",{id:"removed-2"},"Removed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Removed ",(0,n.kt)("inlineCode",{parentName:"li"},"verifyImageMagick")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"removeDiffImages")," tasks")),(0,n.kt)("h3",{id:"all-projects-1"},"All Projects"),(0,n.kt)("h4",{id:"updates-1"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"kotlin to 1.7.21"),(0,n.kt)("li",{parentName:"ul"},"kotlin-gradle-plugin to 1.7.21"),(0,n.kt)("li",{parentName:"ul"},"kotlinx-coroutines-android to 1.6.4"),(0,n.kt)("li",{parentName:"ul"},"kotlin-stdlib-jdk8 to 1.7.21"),(0,n.kt)("li",{parentName:"ul"},"Android Gradle Plugin to 7.3.1"),(0,n.kt)("li",{parentName:"ul"},"Gradle wrapper to 7.4"),(0,n.kt)("li",{parentName:"ul"},"androidx.compose.ui to 1.4.0-alpha02"),(0,n.kt)("li",{parentName:"ul"},"androidx.compose.material to 1.4.0-alpha02"),(0,n.kt)("li",{parentName:"ul"},"androidx.compose.compiler to 1.4.0-alpha02")),(0,n.kt)("h3",{id:"sample-1"},"Sample"),(0,n.kt)("h4",{id:"updates-2"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Upgrade Sample target & compile SDK to 33")),(0,n.kt)("h3",{id:"fullscreen-extension-library"},"Fullscreen Extension Library"),(0,n.kt)("p",null,"Capture the entire device screen, including system UI, dialogs and menus."),(0,n.kt)("h3",{id:"accessibility-checks-extension-library"},"Accessibility Checks Extension Library"),(0,n.kt)("p",null,"Combine visual regression testing with accessibility checks to further improve the quality and\nexpand the reach of your application."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-alpha02"},"2.0.0-alpha02"),(0,n.kt)("h3",{id:"compose-extension-library"},"Compose Extension Library"),(0,n.kt)("h4",{id:"changed-6"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"ComposableScreenshotRule")," now has an additional constructor argument, ",(0,n.kt)("inlineCode",{parentName:"p"},"composeTestRule"),". This\nprovides you with a default instance of ",(0,n.kt)("inlineCode",{parentName:"p"},"ComposeTestRule")," or allows you to provide your own\ninstance. With this ",(0,n.kt)("inlineCode",{parentName:"p"},"composeTestRule")," instance, you can now use the ",(0,n.kt)("inlineCode",{parentName:"p"},"ComposeTestRule")," semantics to\ninteract with the UI hierarchy prior to taking screenshots."),(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'  @get:Rule\n  val rule = ComposableScreenshotRule(composeTestRule = createAndroidComposeRule(ComposableTestActivity::class.java))\n  @ScreenshotInstrumentation\n  @Test\n  fun default() {\n      rule\n          .setCompose {\n              var text by remember { mutableStateOf("") }\n              TextField(\n                  value = text,\n                  onValueChange = { text = it },\n                  modifier = Modifier.testTag("field")\n              )\n          }\n          .setComposeActions { composeTestRule ->\n              composeTestRule.onNodeWithTag("field").performTextInput("testify")\n          }\n          .assertSame()\n  }\n')))),(0,n.kt)("h4",{id:"added-6"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"ComposableTestActivity")," now supports resource wrapping. This means that Testify can configure the\nfont scale and locale for tests. Compose screenshot tests will now respect the ",(0,n.kt)("inlineCode",{parentName:"li"},"locale"),"\nand ",(0,n.kt)("inlineCode",{parentName:"li"},"fontScale")," configuration parameters. Usage:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-kotlin"},'rule\n    .setCompose {\n        Text("Example")\n    }\n    .setLocale(Locale.FRANCE)\n    .setFontScale(2.0f)\n')))),(0,n.kt)("h3",{id:"fullscreen-extension-library-1"},"Fullscreen Extension Library"),(0,n.kt)("p",null,"Capture the entire device screen, including system UI, dialogs and menus."),(0,n.kt)("h3",{id:"accessibility-checks-extension-library-1"},"Accessibility Checks Extension Library"),(0,n.kt)("p",null,"Combine visual regression testing with accessibility checks to further improve the quality and\nexpand the reach of your application."),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"200-alpha01"},"2.0.0-alpha01"),(0,n.kt)("p",null,"\u26a0\ufe0f Major breaking changes."),(0,n.kt)("p",null,"This version is provided as an easier migration path to the Testify 2.0 libraries.\n2.0.0-alpha01 is functionally identical to 1.2.0-alpha01 but all classes have been updated to use\nthe new ",(0,n.kt)("inlineCode",{parentName:"p"},"dev.testify")," namespace."),(0,n.kt)("p",null,"If you update all of your code to reference ",(0,n.kt)("inlineCode",{parentName:"p"},"dev.testify")," instead of ",(0,n.kt)("inlineCode",{parentName:"p"},"com.shopify.testify")," you will\nbe better positioned to adopt the new Testify 2.0 API."),(0,n.kt)("p",null,"Please the the ",(0,n.kt)("a",{parentName:"p",href:"https://ndtp.github.io/android-testify/docs/migration"},"Migration Guide")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"120-alpha01"},"1.2.0-alpha01"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Bump Testify core version to 1.2.0-alpha01")),(0,n.kt)("h3",{id:"library-6"},"Library"),(0,n.kt)("h4",{id:"updates-3"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"kotlin upgraded from 1.4.31 to 1.5.31"),(0,n.kt)("li",{parentName:"ul"},"androidx.appcompat:appcompat from 1.2.0 to 1.3.1"),(0,n.kt)("li",{parentName:"ul"},"androidx.test.espresso from 3.3.0 to 3.4.0"),(0,n.kt)("li",{parentName:"ul"},"androidx.test.ext:junit from 1.1.2 to 1.1.3"),(0,n.kt)("li",{parentName:"ul"},"androidx.test:rules and androidx.test:runner from 1.3.0 to 1.4.0"),(0,n.kt)("li",{parentName:"ul"},"kotlinx-coroutines from 1.4.3 to 1.5.1"),(0,n.kt)("li",{parentName:"ul"},"com.google.android.material from 1.3.0 to 1.4.0"),(0,n.kt)("li",{parentName:"ul"},"mockito from 3.3.3 to 4.0.0"),(0,n.kt)("li",{parentName:"ul"},"mockito-android from 3.3.3 to 4.0.0")),(0,n.kt)("h3",{id:"gradle-plugin-1"},"Gradle Plugin"),(0,n.kt)("h4",{id:"updates-4"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"kotlin upgraded from 1.4.31 to 1.5.31")),(0,n.kt)("h3",{id:"sample-2"},"Sample"),(0,n.kt)("h4",{id:"added-7"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Support for Jetpack Compose 1.0.5"),(0,n.kt)("li",{parentName:"ul"},"ComposeActivity"),(0,n.kt)("li",{parentName:"ul"},"ComposeActivityScreenshotTest")),(0,n.kt)("h4",{id:"updates-5"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"compileSdkVersion from 29 to 31"),(0,n.kt)("li",{parentName:"ul"},"targetSdkVersion from 29 to 31")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"110"},"1.1.0"),(0,n.kt)("p",null,"Library and plugin released without additional changes."),(0,n.kt)("h2",{id:"110-rc01"},"1.1.0-rc01"),(0,n.kt)("h3",{id:"library-7"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-1"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/issues/228"},"https://github.com/Shopify/android-testify/issues/228"),"\n, ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/issues/215"},"https://github.com/Shopify/android-testify/issues/215"),"\nAccount for uneven processing chunk sizes. As Testify processes, it divides the images into chunks\nfor faster, parallel processing.\nA bug in the original code assumed that each processing chunk would be equally sized. This caused\nan out-of-bounds exception in any case where the number of pixels in the image could not be evenly\ndivided.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/issues/216"},"https://github.com/Shopify/android-testify/issues/216"),"\nYou can now use ",(0,n.kt)("inlineCode",{parentName:"p"},"ScreenshotRule.setExactness()")," in conjunction\nwith ",(0,n.kt)("inlineCode",{parentName:"p"},"ScreenshotRule.defineExclusionRects()"),". You can now define both an exclusion area and an\nexactness threshold."))),(0,n.kt)("h4",{id:"added-8"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.getExactness():Float?")," added.")),(0,n.kt)("h4",{id:"changes"},"Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Method ",(0,n.kt)("inlineCode",{parentName:"p"},"ScreenshotRule.setExactness(exactness: Float?): ScreenshotRule<T>")," now accepts a nullable\nvalue.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},(0,n.kt)("inlineCode",{parentName:"p"},"TestifyFeatures.GenerateDiffs")," now visualizes exclusion regions and the exactness tolerance.\nWhen enabled, GenerateDiffs will write a companion image for your screenshot test which can help\nyou more easily\nidentify which areas of your test have triggered the screenshot failure.\nDiff files are only generated for failing tests.\nThe generated file will be created in the same directory as your baseline images. Diff files can\nbe pulled from\nthe device using ",(0,n.kt)("inlineCode",{parentName:"p"},":screenshotPull"),"."),(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},"Black pixels are identical between the baseline and test image"),(0,n.kt)("li",{parentName:"ul"},"Grey pixels have been excluded from the comparison"),(0,n.kt)("li",{parentName:"ul"},"Yellow pixels are different, but within the Exactness threshold"),(0,n.kt)("li",{parentName:"ul"},"Red pixels are different"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Method ",(0,n.kt)("inlineCode",{parentName:"p"},"DeviceIdentifier.getDeviceDimensions(context: Context): Pair<Int, Int>")," is now public."))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"110-beta3"},"1.1.0-beta3"),(0,n.kt)("h3",{id:"library-8"},"Library"),(0,n.kt)("h3",{id:"gradle-plugin-2"},"Gradle Plugin"),(0,n.kt)("h4",{id:"bug-fixes-2"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Several internal changes to support Gradle 7."),(0,n.kt)("li",{parentName:"ul"},"Fix ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/issues/225"},"https://github.com/Shopify/android-testify/issues/225"),"\nApply annotations to task properties for up-to-date checks. Adds missing annotations on public\nproperties in Tasks to assist with up-to-date checks. Missing annotations are now errors in Gradle\n7.0+."),(0,n.kt)("li",{parentName:"ul"},"Fix ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/issues/234"},"https://github.com/Shopify/android-testify/issues/234"),"\nUsing the Testify plugin with AGP 7+ would generate the error \"Cannot query the value of\nproperty 'applicationId' because configuration of project ':app' has not completed yet\". Fixed by\ncatching the error and providing a sensible default. In the case where the test packaged ID is\nincorrectly inferred, the user can specify ",(0,n.kt)("inlineCode",{parentName:"li"},'testify { testPackageId "my.custom.package.test" }')," in\ntheir build.gradle to override the inferred value.")),(0,n.kt)("h3",{id:"library-9"},"Library"),(0,n.kt)("h4",{id:"changes-1"},"Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Renamed the ",(0,n.kt)("inlineCode",{parentName:"li"},"rootViewId")," setter on ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotTestRule")," for better Java interoperability. It has\nbeen renamed to ",(0,n.kt)("inlineCode",{parentName:"li"},"setRootViewIdResource"),".")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"110-beta2"},"1.1.0-beta2"),(0,n.kt)("h3",{id:"library-10"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-3"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},'Fix "ParallelPixelProcessor.kt:90 - java.lang.IndexOutOfBoundsException: index=315250 out of\nbounds (limit=315250)"\n',(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/issues/215"},"https://github.com/Shopify/android-testify/issues/215"))),(0,n.kt)("h4",{id:"updates-6"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"AGP from 4.2.0-beta6 to 4.2.0")),(0,n.kt)("h3",{id:"sample-3"},"Sample"),(0,n.kt)("h4",{id:"changes-2"},"Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Remove kotlin-android-extensions from Sample and replace with viewBinding")),(0,n.kt)("h2",{id:"110-beta1"},"1.1.0-beta1"),(0,n.kt)("h3",{id:"library-11"},"Library"),(0,n.kt)("h4",{id:"changes-3"},"Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Optional constructor argument enableReporter added to ScreenshotRule. Allows you to specify\nwhether to run the reporter for this test rule."),(0,n.kt)("li",{parentName:"ul"},"TestifyFeatures now support multiple named strings."),(0,n.kt)("li",{parentName:"ul"},'PixelCopyCapture can be enabled using either "testify-experimental-capture" or "\ntestify-pixelcopy-capture" in the AndroidManifest'),(0,n.kt)("li",{parentName:"ul"},"FuzzyCompare (setExactness) is now multi-threaded and significantly faster."),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule constructor argument activityClass is now ",(0,n.kt)("inlineCode",{parentName:"li"},"protected")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule constructor argument rootViewId is now ",(0,n.kt)("inlineCode",{parentName:"li"},"protected")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule constructor argument launchActivity is now ",(0,n.kt)("inlineCode",{parentName:"li"},"protected")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.testNameComponents is now ",(0,n.kt)("inlineCode",{parentName:"li"},"public")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.fullyQualifiedTestPath is now ",(0,n.kt)("inlineCode",{parentName:"li"},"public")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.getRootView is now ",(0,n.kt)("inlineCode",{parentName:"li"},"public")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.instrumentationPrintln is now ",(0,n.kt)("inlineCode",{parentName:"li"},"public")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.isRecordMode is now ",(0,n.kt)("inlineCode",{parentName:"li"},"public")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.getModuleName is now ",(0,n.kt)("inlineCode",{parentName:"li"},"public")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.beforeActivityLaunched() is now annotated with ",(0,n.kt)("inlineCode",{parentName:"li"},"@CallSuper")),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule.afterActivityLaunched() is now annotated with ",(0,n.kt)("inlineCode",{parentName:"li"},"@CallSuper"))),(0,n.kt)("h4",{id:"added-9"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"TestifyFeatures.GenerateDiffs"),". When enabled, will output a ",(0,n.kt)("inlineCode",{parentName:"li"},".diff.png")," alongside existing\nbaseline images. These images are high-contrast images where each difference, regardless of how\nminor, are indicated in red against a black background. See the ",(0,n.kt)("inlineCode",{parentName:"li"},"generateDiffs")," test\nin ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRuleExampleTests")," for an example. Diff images will be pulled from the device when\nrunning ",(0,n.kt)("inlineCode",{parentName:"li"},"screenshotPull"),"."),(0,n.kt)("li",{parentName:"ul"},"ScreenshotRule now supports the generation of YAML test reports."),(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"Reporter")," feature flag to TestifyFeatures. Allows you to enable test reporting."),(0,n.kt)("li",{parentName:"ul"},"Added method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.beforeAssertSame()"),". This method is invoked immediately before\nassertSame and before the activity is launched."),(0,n.kt)("li",{parentName:"ul"},"Added method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.beforeInitializeView(activity: Activity)"),". This method is invoked\nprior to any view modifications and prior to layout inflation."),(0,n.kt)("li",{parentName:"ul"},"Added method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.afterInitializeView(activity: Activity)"),". This method is invoked\nafter layout inflation and all view modifications have been applied."),(0,n.kt)("li",{parentName:"ul"},"Added method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.beforeScreenshot(activity: Activity)"),". This method is invoked\nimmediately before the screenshot is taken."),(0,n.kt)("li",{parentName:"ul"},"Added method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.afterScreenshot(activity: Activity, currentBitmap: Bitmap?)"),". This\nmethod is invoked immediately after the screenshot has been taken."),(0,n.kt)("li",{parentName:"ul"},"Added method ",(0,n.kt)("inlineCode",{parentName:"li"},"ScreenshotRule.applyViewModifications(parentView: ViewGroup)"),". This method is called\non the parent view to make runtime modifications to the view properties or layout.")),(0,n.kt)("h4",{id:"updates-7"},"Updates:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Compile and Target SDK from 29 to 30"),(0,n.kt)("li",{parentName:"ul"},"AGP from 4.1.0 to 4.2.0-beta6"),(0,n.kt)("li",{parentName:"ul"},"Gradle from 6.5 to 6.7.1"),(0,n.kt)("li",{parentName:"ul"},"Kotlin from 1.3.72 to 1.4.31"),(0,n.kt)("li",{parentName:"ul"},"AppCompat from 1.1.0 to 1.2.0"),(0,n.kt)("li",{parentName:"ul"},"Espresso from 3.2.0 to 3.3.0"),(0,n.kt)("li",{parentName:"ul"},"JUnit from 1.1.1 to 1.1.2"),(0,n.kt)("li",{parentName:"ul"},"Test Rules from 1.2.0 to 1.3.0"),(0,n.kt)("li",{parentName:"ul"},"Test Runner from 1.1.1 to 1.3.0")),(0,n.kt)("h3",{id:"gradle-plugin-3"},"Gradle Plugin"),(0,n.kt)("h4",{id:"added-10"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added task ",(0,n.kt)("inlineCode",{parentName:"li"},"reportShow")," to print the test result report to the console."),(0,n.kt)("li",{parentName:"ul"},"Added task ",(0,n.kt)("inlineCode",{parentName:"li"},"reportPull")," to copy the report file from the device and wait for it to be committed to\ndisk.")),(0,n.kt)("h3",{id:"sample-4"},"Sample"),(0,n.kt)("h4",{id:"updates-8"},"Updates:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Material from 1.1.0 to 1.3.0"),(0,n.kt)("li",{parentName:"ul"},"MockitoKotlin from 2.1.0 to 2.2.0")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"100-rc3"},"1.0.0-rc3"),(0,n.kt)("h3",{id:"library-12"},"Library"),(0,n.kt)("h4",{id:"changes-4"},"Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"ScreenshotUtility is now public"),(0,n.kt)("li",{parentName:"ul"},"ScreenshotBaselineNotDefinedException now reports the expected device key")),(0,n.kt)("h4",{id:"added-11"},"Added"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Public method getRootViewId() has been added to ScreenshotRule")),(0,n.kt)("h2",{id:"100-rc2"},"1.0.0-rc2"),(0,n.kt)("h3",{id:"library-13"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-4"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Increase the timeout values on orientation change. Addresses\nvarious ",(0,n.kt)("inlineCode",{parentName:"li"},"Failed to apply requested rotation")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"Activity did not resume")," errors when\ninvoking ",(0,n.kt)("inlineCode",{parentName:"li"},"setOrientation"),".")),(0,n.kt)("h4",{id:"updates-9"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Android Gradle Plugin to 4.1.0"),(0,n.kt)("li",{parentName:"ul"},"Gradle Wrapper to 6.5")),(0,n.kt)("h3",{id:"gradle-plugin-4"},"Gradle Plugin"),(0,n.kt)("h4",{id:"bug-fixes-5"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Access task names lazily via names property. We were previously accessing task names in a way\nwhich resulted in early configuration of tasks resulting in Gradle failing to sync on the latest\nversions of Gradle and Android Gradle Plugin when custom lint checks were used in a project.\nLikely related to ",(0,n.kt)("a",{parentName:"li",href:"https://issuetracker.google.com/issues/67482030#comment2"},"https://issuetracker.google.com/issues/67482030#comment2"),".\nUse the ",(0,n.kt)("inlineCode",{parentName:"li"},"TaskContainer.names")," which doesn't cause all tasks to be resolved immediately.")),(0,n.kt)("h3",{id:"sample-app"},"Sample App"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Update Sample application to use a Pixel 3a API 30 baseline emulator.")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"100-rc1"},"1.0.0-rc1"),(0,n.kt)("h4",{id:"changes-5"},"Changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Replace Travis CI with GitHub Actions. ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/actions"},"https://github.com/Shopify/android-testify/actions"))),(0,n.kt)("h3",{id:"library-14"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-6"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Fix ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/issues/138"},"https://github.com/Shopify/android-testify/issues/138"),"\nIntroduce the ",(0,n.kt)("inlineCode",{parentName:"p"},"setFocusTarget")," method on ",(0,n.kt)("inlineCode",{parentName:"p"},"ScreenshotRule")," which allows for keyboard focus to be\nplaced on an explicit View.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Fix ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/issues/165"},"https://github.com/Shopify/android-testify/issues/165"),"\nIncrease the timeout on the ActivityLifecycleMonitor to 5 seconds to allow for the rotation to\ncomplete.\nDeregister the lifecycle callback.")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("p",{parentName:"li"},"Fix ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/issues/166"},"https://github.com/Shopify/android-testify/issues/166"),"\nReplace the existing FuzzyCompare algorithm with CIEDE2000. Calculate the colour difference value\nbetween two colours in lab space.\nThe CIELAB color space (also known as CIE L",(0,n.kt)("em",{parentName:"p"}," a")," b",(0,n.kt)("em",{parentName:"p"},' or sometimes abbreviated as simply "Lab" color\nspace) is a color space defined by the International Commission on Illumination (CIE) in 1976.\nIt expresses color as three values: L')," for the lightness from black (0) to white (100), a",(0,n.kt)("em",{parentName:"p"}," from\ngreen (\u2212) to red (+), and b"),' from blue (\u2212) to yellow (+).\nCIELAB was designed so that the same amount of numerical change in these values corresponds to\nroughly the same amount of visually perceived change.\nThe CIE calls their distance metric \u0394E * ab where delta is a Greek letter often used to denote\ndifference, and E stands for Empfindung; German for "sensation".\nIf deltaE < 1 then the difference can\'t recognized by human eyes.'))),(0,n.kt)("h3",{id:"plugin-1"},"Plugin"),(0,n.kt)("h4",{id:"changed-7"},"Changed"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"The gradle plugin has moved to ",(0,n.kt)("inlineCode",{parentName:"li"},"Plugins/Gradle"))),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"100-beta5"},"1.0.0-beta5"),(0,n.kt)("h3",{id:"library-15"},"Library"),(0,n.kt)("h4",{id:"new"},"New"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Add defineExclusionRects method to ScreenshotRule. You can now use defineExclusionRects to exclude\nregions from a bitmap comparison.")),(0,n.kt)("h3",{id:"updates-10"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Android Gradle Plugin to 4.0.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Junit to 1.1.1"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test Rules to 1.2.0"),(0,n.kt)("li",{parentName:"ul"},"Kotlin to 1.3.72"),(0,n.kt)("li",{parentName:"ul"},"Mockito to 3.3.3")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"100-beta4----june-17-2020"},"1.0.0-beta4 -- June 17, 2020"),(0,n.kt)("h3",{id:"plugin-2"},"Plugin"),(0,n.kt)("h4",{id:"new-1"},"New"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"autoImplementLibrary")," member to the ",(0,n.kt)("inlineCode",{parentName:"li"},"testify")," extension. Defaults to ",(0,n.kt)("inlineCode",{parentName:"li"},"true"),".\nWhen set to ",(0,n.kt)("inlineCode",{parentName:"li"},"false"),", prevents the Plugin from automatically adding a\nLibrary ",(0,n.kt)("inlineCode",{parentName:"li"},"androidTestImplementation")," dependency to your project.\nThis is useful for local debugging or if you require a different version of the library and\nplugin.")),(0,n.kt)("h3",{id:"library-16"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-7"},"Bug fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed issue #153 - Orientation change will now be reliably applied regardless of how many times\nyou invoke ",(0,n.kt)("inlineCode",{parentName:"li"},"setOrientation")," in a single test class.")),(0,n.kt)("h2",{id:"100-beta3----june-11-2020"},"1.0.0-beta3 -- June 11, 2020"),(0,n.kt)("h3",{id:"library-17"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-8"},"Bug Fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed issue #151. Plugin correctly displays Locale string with an underscore, not a dash.\ne.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"en_US"),", not ",(0,n.kt)("inlineCode",{parentName:"li"},"en-US"))),(0,n.kt)("h2",{id:"100-beta2----may-20-2020"},"1.0.0-beta2 -- May 20, 2020"),(0,n.kt)("h3",{id:"library-18"},"Library"),(0,n.kt)("h4",{id:"bug-fixes-9"},"Bug Fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fixed issue #148. Can now correctly override both enabled and disabled features using an\nAndroidManifest meta-data tag.")),(0,n.kt)("h2",{id:"100-beta1----may-2-2020"},"1.0.0-beta1 -- May 2, 2020"),(0,n.kt)("p",null,"Breaking changes introduced. Bumped Testify to 1.0.0-beta1"),(0,n.kt)("h3",{id:"library-19"},"Library"),(0,n.kt)("h4",{id:"new-2"},"New"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u26a0\ufe0f Screenshot images now are written to subdirectories under the ",(0,n.kt)("inlineCode",{parentName:"li"},"screenshot")," directory on\ndevice. Screenshot paths on device now include the full device key and such are properly defined\nto fully represent the device configuration used to generate the images.\nThis can be a breaking change if you use custom scripting to pull/access screenshot images from\nthe emulator."),(0,n.kt)("li",{parentName:"ul"},"\u26a0\ufe0f The emulator locale is now encoded into the device key by default. Previously, only the\nlanguage was encoded in the key. You can disable this behavior using\nthe ",(0,n.kt)("inlineCode",{parentName:"li"},"Locale")," (",(0,n.kt)("inlineCode",{parentName:"li"},"testify-experimental-locale"),") feature.\nThis change will require you to rename your baseline image directory to include the full locale\npath."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/blob/7d0833b2cfedf05d4084d048d165d5f6646a8cba/Library/src/main/java/com/shopify/testify/TestifyFeatures.kt"},"TestifyFeatures"),"\nEnable or disable some features at runtime via manifest entry or in code."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/blob/7d0833b2cfedf05d4084d048d165d5f6646a8cba/Library/src/main/java/com/shopify/testify/ScreenshotRule.kt#L211"},"ScreenshotRule.withExperimentalFeatureEnabled"),"\nUsed in conjunction with ",(0,n.kt)("inlineCode",{parentName:"li"},"TestifyFeatures"),", you can selectively enable an experimental feature on\nthe test rule. Features are reset after ",(0,n.kt)("inlineCode",{parentName:"li"},"assertSame")," is called."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/Shopify/android-testify/blob/7d0833b2cfedf05d4084d048d165d5f6646a8cba/Library/src/main/java/com/shopify/testify/annotation/TestifyLayout.kt"},"TestifyLayout"),"\ncan now accept a layout resource name or a layout resource ID.\nThis is useful for library projects where resource IDs are not stable."),(0,n.kt)("li",{parentName:"ul"},"Two new bitmap capture algorithms have been added. You can now select between PixelCopy, Canvas\nand DrawingCache capture methods.\nThese can be enabled with by passing either CanvasCapture or PixelCopyCapture\nto ",(0,n.kt)("inlineCode",{parentName:"li"},"withExperimentalFeatureEnabled"),", or by enabling ",(0,n.kt)("inlineCode",{parentName:"li"},"testify-canvas-capture"),"\nor ",(0,n.kt)("inlineCode",{parentName:"li"},"testify-experimental-capture")," in your manifest.")),(0,n.kt)("h4",{id:"bug-fixes-10"},"Bug Fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Fully support changing locale during testing on API 19+"),(0,n.kt)("li",{parentName:"ul"},"Correctly access external files directory on API 28+"),(0,n.kt)("li",{parentName:"ul"},"Correctly detect the locale on API 22"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"SoftwareRenderViewModification")," now qualifies all views, not just ",(0,n.kt)("inlineCode",{parentName:"li"},"ImageView")),(0,n.kt)("li",{parentName:"ul"},"setFontScale now works correctly on API 21+")),(0,n.kt)("h4",{id:"testing-changes"},"Testing changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Add ",(0,n.kt)("inlineCode",{parentName:"li"},"TestActivity")," to androidTest configuration of Library for testing"),(0,n.kt)("li",{parentName:"ul"},"Update Library baseline test images to support ",(0,n.kt)("inlineCode",{parentName:"li"},"en_US")," locale"),(0,n.kt)("li",{parentName:"ul"},"Add tests for ",(0,n.kt)("inlineCode",{parentName:"li"},"Experimental PixelCopy")," API"),(0,n.kt)("li",{parentName:"ul"},"Update ",(0,n.kt)("inlineCode",{parentName:"li"},"DeviceIdentifierTest")," to work with locale (not language)"),(0,n.kt)("li",{parentName:"ul"},"Add tests for ",(0,n.kt)("inlineCode",{parentName:"li"},"TestifyFeatures"))),(0,n.kt)("h4",{id:"updates-11"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Gradle from 4.10.2 to 6.2.1"),(0,n.kt)("li",{parentName:"ul"},"Android Gradle Plugin from 3.3.2 to 3.6.1"),(0,n.kt)("li",{parentName:"ul"},"ktlint from 0.29.0 to 0.36.0"),(0,n.kt)("li",{parentName:"ul"},"Compile and Target SDK from 28 to 29"),(0,n.kt)("li",{parentName:"ul"},"AndroidX ConstraintLayout from 2.0.0-alpha3 to 2.0.0-beta4"),(0,n.kt)("li",{parentName:"ul"},"AndroidX AppCompat from 1.0.0 to 1.1.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Core Ktx from 1.0.1 to 1.1.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test Core from 2.0.0-rc01 to 2.1.0"),(0,n.kt)("li",{parentName:"ul"},"AndroidX Test Espresso from 3.1.0 to 3.2.0"),(0,n.kt)("li",{parentName:"ul"},"Dokka from 0.9.18 to 0.10.0"),(0,n.kt)("li",{parentName:"ul"},"Kotlin from 1.3.21 to 1.3.70"),(0,n.kt)("li",{parentName:"ul"},"Mockito2 from 2.23.0 to 2.28.2"),(0,n.kt)("li",{parentName:"ul"},"Travis CI now downloads and installs Android SDK 29"),(0,n.kt)("li",{parentName:"ul"},"Split Bintray gradle script to separate file"),(0,n.kt)("li",{parentName:"ul"},"Kotlin stdlib8 from stdlib7")),(0,n.kt)("h3",{id:"plugin-3"},"Plugin:"),(0,n.kt)("h4",{id:"new-3"},"New"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"\u26a0\ufe0f ",(0,n.kt)("strong",{parentName:"li"},"Breaking Change"),"\nThe ",(0,n.kt)("inlineCode",{parentName:"li"},"testify {}")," gradle extension been restructured. Testify no longer requires the ",(0,n.kt)("inlineCode",{parentName:"li"},"testify"),"\nextension to be defined in your project.\nThis is particularly valuable for Android library projects as Testify can now correctly infer most\nsettings automatically.\nMost settings can now be inferred. Testify now supports multiple flavor dimensions and product\nflavors.",(0,n.kt)("ul",{parentName:"li"},(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"testContextId")," has been deleted and is no longer needed."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"applicationIdSuffix")," has been deleted. Its value can now be inferred."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"installTask")," has been added. You can specify which task to run to install your APK. This is\nautomatically inferred, but you may wish to override the default value."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"installAndroidTestTask")," has been added. You can specify which task to run to install the\nAndroid Instrumentation test package. This is automatically inferred, but you may wish to\noverride the default value.\nYou can view the inferred extension values by running ",(0,n.kt)("inlineCode",{parentName:"li"},"./gradlew testifySettings")))),(0,n.kt)("li",{parentName:"ul"},"Added ",(0,n.kt)("inlineCode",{parentName:"li"},"verbose")," logging support. Add ",(0,n.kt)("inlineCode",{parentName:"li"},"-Pverbose=true")," to your gradle commands to enable verbose\nlogging. e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"./gradlew Sample:screenshotTest -Pverbose=true")),(0,n.kt)("li",{parentName:"ul"},"The device key is now based off the emulator locale, not language. (e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},"en_US")," instead of\njust ",(0,n.kt)("inlineCode",{parentName:"li"},"en"),")"),(0,n.kt)("li",{parentName:"ul"},"Testify plugin no longer requires ",(0,n.kt)("inlineCode",{parentName:"li"},"adb root")," access. ",(0,n.kt)("inlineCode",{parentName:"li"},"screenshotPull")," and ",(0,n.kt)("inlineCode",{parentName:"li"},"screenshotClear")," can\nnow work on any device or Google Play emulator image.")),(0,n.kt)("h4",{id:"bug-fixes-11"},"Bug Fixes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"screenshotClear")," will now properly delete files when running from a Windows client."),(0,n.kt)("li",{parentName:"ul"},"Screenshots are now copied to the correct baseline directory when captured on a landscape\nemulator."),(0,n.kt)("li",{parentName:"ul"},"Screenshots are now copied to the correct baseline directory regardless of emulator locale."),(0,n.kt)("li",{parentName:"ul"},"Testify now more accurately detects the appropriate ",(0,n.kt)("inlineCode",{parentName:"li"},"install")," task for your project. Testify\nrelies on this to correctly insall your APK for testing and can now infer more project types\ncorrectly."),(0,n.kt)("li",{parentName:"ul"},"Correctly set and get the locale language and region on API 22."),(0,n.kt)("li",{parentName:"ul"},"Correctly support overridden display density.")),(0,n.kt)("h4",{id:"testing-changes-1"},"Testing changes"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"JVM tests now log status to console.")),(0,n.kt)("h4",{id:"updates-12"},"Updates"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Update to kotlin stdlib8 from stdlib7.")),(0,n.kt)("h3",{id:"sample-app-1"},"Sample App:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Update compile SDK from 28 to 29"),(0,n.kt)("li",{parentName:"ul"},"Update target SDK from 28 to 29"),(0,n.kt)("li",{parentName:"ul"},"Extend MaterialComponents theme instead of AppCompat theme"),(0,n.kt)("li",{parentName:"ul"},"Re-record baseline using locale key")),(0,n.kt)("hr",null),(0,n.kt)("h2",{id:"100-alpha1---april-5-2019"},"1.0.0-alpha1 - April 5, 2019"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/Shopify/android-testify/commit/3a5b617cf9a1f13e31830cfbcb009393c90e3b37"},"https://github.com/Shopify/android-testify/commit/3a5b617cf9a1f13e31830cfbcb009393c90e3b37")),(0,n.kt)("p",null,"Initial public release \ud83c\udf89"))}m.isMDXComponent=!0}}]);