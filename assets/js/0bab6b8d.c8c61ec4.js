"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3199],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},s=Object.keys(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)n=s[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),l=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=l(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=l(n),d=r,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||s;return n?o.createElement(f,a(a({ref:t},p),{},{components:n})):o.createElement(f,a({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[u]="string"==typeof e?e:r,a[1]=i;for(var l=2;l<s;l++)a[l]=n[l];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3912:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>l});var o=n(7462),r=(n(7294),n(3905));const s={},a="Write a test",i={unversionedId:"extensions/compose/test",id:"version-1.2.0-alpha01/extensions/compose/test",title:"Write a test",description:"In order to test a @Composable function, you must first declare an instance variable of the ComposableScreenshotRule class. Then, you can invoke the setCompose() method on the rule instance and declare any Compose UI functions you wish to test.",source:"@site/versioned_docs/version-1.2.0-alpha01/extensions/compose/2-test.md",sourceDirName:"extensions/compose",slug:"/extensions/compose/test",permalink:"/android-testify/docs/1.2.0-alpha01/extensions/compose/test",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/versioned_docs/version-1.2.0-alpha01/extensions/compose/2-test.md",tags:[],version:"1.2.0-alpha01",sidebarPosition:2,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Set up testify-compose",permalink:"/android-testify/docs/1.2.0-alpha01/extensions/compose/setup"},next:{title:"Recipes",permalink:"/android-testify/docs/1.2.0-alpha01/category/recipes"}},c={},l=[],p={toc:l};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"write-a-test"},"Write a test"),(0,r.kt)("p",null,"In order to test a ",(0,r.kt)("inlineCode",{parentName:"p"},"@Composable")," function, you must first declare an instance variable of the ",(0,r.kt)("inlineCode",{parentName:"p"},"ComposableScreenshotRule")," class. Then, you can invoke the ",(0,r.kt)("inlineCode",{parentName:"p"},"setCompose()")," method on the ",(0,r.kt)("inlineCode",{parentName:"p"},"rule")," instance and declare any Compose UI functions you wish to test."),(0,r.kt)("p",null,"Testify will capture only the bounds of the ",(0,r.kt)("inlineCode",{parentName:"p"},"@Composable"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'class ComposableScreenshotTest {\n\n    @get:Rule val rule = ComposableScreenshotRule()\n\n    @ScreenshotInstrumentation\n    @Test\n    fun default() {\n        rule\n            .setCompose {\n                Text(text = "Hello, Testify!")\n            }\n            .assertSame()\n    }\n}\n')))}u.isMDXComponent=!0}}]);