"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4474],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return d}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),f=p(r),d=o,y=f["".concat(s,".").concat(d)]||f[d]||u[d]||i;return r?n.createElement(y,a(a({ref:t},l),{},{components:r})):n.createElement(y,a({ref:t},l))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=f;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3823:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return u}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],c={},s="Taking a screenshot of an area less than that of the entire Activity",p={unversionedId:"recipes/view-provider",id:"version-1.2.0-alpha01/recipes/view-provider",title:"Taking a screenshot of an area less than that of the entire Activity",description:"It is often desirable to capture only a portion of your screen or to capture a single View.",source:"@site/versioned_docs/version-1.2.0-alpha01/recipes/1-view-provider.md",sourceDirName:"recipes",slug:"/recipes/view-provider",permalink:"/android-testify/docs/1.2.0-alpha01/recipes/view-provider",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/versioned_docs/version-1.2.0-alpha01/recipes/1-view-provider.md",tags:[],version:"1.2.0-alpha01",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Recipes",permalink:"/android-testify/docs/1.2.0-alpha01/category/recipes"},next:{title:"Changing the Locale in a test",permalink:"/android-testify/docs/1.2.0-alpha01/recipes/locale"}},l={},u=[],f={toc:u};function d(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"taking-a-screenshot-of-an-area-less-than-that-of-the-entire-activity"},"Taking a screenshot of an area less than that of the entire Activity"),(0,i.kt)("p",null,"It is often desirable to capture only a portion of your screen or to capture a single ",(0,i.kt)("inlineCode",{parentName:"p"},"View"),".\nFor these cases, you can use the ",(0,i.kt)("inlineCode",{parentName:"p"},"setScreenshotViewProvider")," on ",(0,i.kt)("inlineCode",{parentName:"p"},"ScreenshotRule")," to specify which ",(0,i.kt)("inlineCode",{parentName:"p"},"View")," to capture."),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"ScreenshotRule.setScreenshotViewProvider"),", you must return a ",(0,i.kt)("inlineCode",{parentName:"p"},"View")," reference which will be used by Testify to narrow the bitmap to only that View."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},"    @TestifyLayout(R.layout.view_client_details)\n    @ScreenshotInstrumentation\n    @Test\n    fun default() {\n        rule\n            .setScreenshotViewProvider {\n                it.findViewById(R.id.info_card)\n            }\n            .assertSame()\n    }\n")))}d.isMDXComponent=!0}}]);