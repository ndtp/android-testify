"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8385],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>f});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),c=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(n),d=r,f=p["".concat(i,".").concat(d)]||p[d]||m[d]||o;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[p]="string"==typeof e?e:r,s[1]=l;for(var c=2;c<o;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5162:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(7294),r=n(6010);const o={tabItem:"tabItem_Ymn6"};function s(e){let{children:t,hidden:n,className:s}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(o.tabItem,s),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>m});var a=n(7462),r=n(7294),o=n(6010),s=n(2389),l=n(7392),i=n(7094),c=n(2466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:n,defaultValue:s,values:p,groupId:m,className:d}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),h=p??f.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),b=(0,l.l)(h,((e,t)=>e.value===t.value));if(b.length>0)throw new Error(`Docusaurus error: Duplicate values "${b.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const g=null===s?s:s??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==g&&!h.some((e=>e.value===g)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${g}" but none of its children has the corresponding value. Available values are: ${h.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:v}=(0,i.U)(),[k,x]=(0,r.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:w}=(0,c.o5)();if(null!=m){const e=y[m];null!=e&&e!==k&&h.some((t=>t.value===e))&&x(e)}const S=e=>{const t=e.currentTarget,n=T.indexOf(t),a=h[n].value;a!==k&&(w(t),x(a),null!=m&&v(m,String(a)))},C=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=T.indexOf(e.currentTarget)+1;t=T[n]??T[0];break}case"ArrowLeft":{const n=T.indexOf(e.currentTarget)-1;t=T[n]??T[T.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",u.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":n},d)},h.map((e=>{let{value:t,label:n,attributes:s}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>T.push(e),onKeyDown:C,onFocus:S,onClick:S},s,{className:(0,o.Z)("tabs__item",u.tabItem,s?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,r.cloneElement)(f.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function m(e){const t=(0,s.Z)();return r.createElement(p,(0,a.Z)({key:String(t)},e))}},5863:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),o=n(5488),s=n(5162);const l={},i="Testing with different Locales and Font Scales",c={unversionedId:"extensions/compose/resource-wrapping",id:"extensions/compose/resource-wrapping",title:"Testing with different Locales and Font Scales",description:"Locales",source:"@site/docs/extensions/compose/4-resource-wrapping.md",sourceDirName:"extensions/compose",slug:"/extensions/compose/resource-wrapping",permalink:"/android-testify/docs/extensions/compose/resource-wrapping",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/extensions/compose/4-resource-wrapping.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Interoperability with ComposeTestRule",permalink:"/android-testify/docs/extensions/compose/compose-test-rule"},next:{title:"Fullscreen Capture Method",permalink:"/android-testify/docs/category/fullscreen-capture-method"}},u={},p=[{value:"Locales",id:"locales",level:2},{value:"Example",id:"example",level:3},{value:"Font Scale",id:"font-scale",level:2}],m={toc:p},d="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"testing-with-different-locales-and-font-scales"},"Testing with different Locales and Font Scales"),(0,r.kt)("h2",{id:"locales"},"Locales"),(0,r.kt)("p",null,"It is often desirable to test your composable in multiple locales. Testify allows you to dynamically change the locale on a per-test basis. "),(0,r.kt)("p",null,"When using ",(0,r.kt)("inlineCode",{parentName:"p"},"ComposableScreenshotRule"),", you can invoke the ",(0,r.kt)("inlineCode",{parentName:"p"},"setLocale()")," method to set the Locale used in your test. ",(0,r.kt)("inlineCode",{parentName:"p"},"setLocale")," accepts any valid ",(0,r.kt)("a",{parentName:"p",href:"https://docs.oracle.com/javase/7/docs/api/java/util/Locale.html"},"Locale")," instance."),(0,r.kt)("h3",{id:"example"},"Example"),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"test",label:"ComposableScreenshotRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'\n    // In the res/values/strings.xml file\n    // <string name="example">A short example</string>\n\n    // In the res/values-fr/strings.xml file\n    // <string name="example">Un petit exemple</string>\n\n    @ScreenshotInstrumentation\n    @Test\n    fun localeFrance() {\n        rule\n            .setCompose {\n                Text(stringResource(R.string.example))\n            }\n            .setLocale(Locale.FRANCE)\n            .assertSame()\n    }\n'))),(0,r.kt)(s.Z,{value:"scenario",label:"ComposableScreenshotScenarioRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'\n    // In the res/values/strings.xml file\n    // <string name="example">A short example</string>\n\n    // In the res/values-fr/strings.xml file\n    // <string name="example">Un petit exemple</string>\n\n    @ScreenshotInstrumentation\n    @Test\n    fun localeFrance() {\n        launchComposableTestActivity().use { scenario ->\n            rule\n                .withScenario(scenario)\n                .setCompose {\n                    Text(stringResource(R.string.example))\n                }\n                .setLocale(Locale.FRANCE)\n                .assertSame()\n        }\n    }\n')))),(0,r.kt)("h2",{id:"font-scale"},"Font Scale"),(0,r.kt)("p",null,"Testify allows you to change the current scaling factor for fonts, relative to the base density scaling. This allows you to simulate the impact of a user modifying the default font size on their device, such as tiny, large or huge."),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"https://support.google.com/accessibility/android/answer/6006972?hl=en"},"Font size and display size")),(0,r.kt)("p",null,"To modify the font scale in a single test, use the ",(0,r.kt)("inlineCode",{parentName:"p"},"setFontScale()")," method."),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"test",label:"ComposableScreenshotRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'    @ScreenshotInstrumentation\n    @Test\n    fun largeFontScale() {\n        rule\n            .setCompose {\n                Text(\n                    text = "Test",\n                    fontSize = 16.sp\n                )\n            }\n            .setFontScale(3.0f)\n            .assertSame()\n    }\n'))),(0,r.kt)(s.Z,{value:"scenario",label:"ComposableScreenshotScenarioRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'    @ScreenshotInstrumentation\n    @Test\n    fun largeFontScale() {\n        launchComposableTestActivity().use { scenario ->\n            rule\n                .withScenario(scenario)\n                .setCompose {\n                    Text(\n                        text = "Test",\n                        fontSize = 16.sp\n                    )\n                }\n                .setFontScale(3.0f)\n                .assertSame()\n        }\n    }\n')))))}f.isMDXComponent=!0}}]);