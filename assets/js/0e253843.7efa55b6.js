"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5221],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:r,o[1]=s;for(var d=2;d<i;d++)o[d]=n[d];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7385:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e},r.apply(this,arguments)}const i=e=>{let{title:t,titleId:n,...i}=e;return a.createElement("svg",r({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 16 16","aria-labelledby":n},i),t?a.createElement("title",{id:n},t):null,a.createElement("path",{style:{stroke:"none",fillRule:"nonzero",fill:"#9e80b5",fillOpacity:1},d:"M3 14a.947.947 0 0 1-.7-.3.947.947 0 0 1-.3-.7V3c0-.266.098-.5.3-.7.2-.202.434-.3.7-.3h4.652v1H3v10h10V8.348h1V13c0 .266-.098.5-.3.7-.2.202-.434.3-.7.3Zm3.367-3.652-.699-.715L12.301 3H8.652V2H14v5.348h-1V3.715Zm0 0"}))}},5162:(e,t,n)=>{n.d(t,{Z:()=>o});var a=n(7294),r=n(6010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:n,className:o}=e;return a.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:n},t)}},5488:(e,t,n)=>{n.d(t,{Z:()=>p});var a=n(7462),r=n(7294),i=n(6010),o=n(2389),s=n(7392),l=n(7094),d=n(2466);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function u(e){const{lazy:t,block:n,defaultValue:o,values:u,groupId:p,className:m}=e,g=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=u??g.map((e=>{let{props:{value:t,label:n,attributes:a}}=e;return{value:t,label:n,attributes:a}})),v=(0,s.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===o?o:o??g.find((e=>e.props.default))?.props.value??g[0].props.value;if(null!==h&&!f.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:y}=(0,l.U)(),[k,N]=(0,r.useState)(h),w=[],{blockElementScrollPositionUntilNextRender:T}=(0,d.o5)();if(null!=p){const e=b[p];null!=e&&e!==k&&f.some((t=>t.value===e))&&N(e)}const C=e=>{const t=e.currentTarget,n=w.indexOf(t),a=f[n].value;a!==k&&(T(t),N(a),null!=p&&y(p,String(a)))},O=e=>{let t=null;switch(e.key){case"ArrowRight":{const n=w.indexOf(e.currentTarget)+1;t=w[n]??w[0];break}case"ArrowLeft":{const n=w.indexOf(e.currentTarget)-1;t=w[n]??w[w.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":n},m)},f.map((e=>{let{value:t,label:n,attributes:o}=e;return r.createElement("li",(0,a.Z)({role:"tab",tabIndex:k===t?0:-1,"aria-selected":k===t,key:t,ref:e=>w.push(e),onKeyDown:O,onFocus:C,onClick:C},o,{className:(0,i.Z)("tabs__item",c.tabItem,o?.className,{"tabs__item--active":k===t})}),n??t)}))),t?(0,r.cloneElement)(g.filter((e=>e.props.value===k))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},g.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==k})))))}function p(e){const t=(0,o.Z)();return r.createElement(u,(0,a.Z)({key:String(t)},e))}},1321:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>d,default:()=>f,frontMatter:()=>l,metadata:()=>c,toc:()=>p});var a=n(7462),r=(n(7294),n(3905)),i=n(7385),o=n(5488),s=n(5162);const l={},d="Configuring Testify to run on Gradle managed device",c={unversionedId:"recipes/gmd",id:"recipes/gmd",title:"Configuring Testify to run on Gradle managed device",description:"Starting from API levels",source:"@site/docs/recipes/20-gmd.md",sourceDirName:"recipes",slug:"/recipes/gmd",permalink:"/android-testify/docs/recipes/gmd",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/recipes/20-gmd.md",tags:[],version:"current",sidebarPosition:20,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Multi-user support",permalink:"/android-testify/docs/recipes/multi-user"},next:{title:"Configuring Testify for Android Library Projects",permalink:"/android-testify/docs/recipes/library-projects"}},u={},p=[{value:"Adding Gradle managed device configuration to build file",id:"adding-gradle-managed-device-configuration-to-build-file",level:3},{value:"Configuring the Testify library",id:"configuring-the-testify-library",level:3},{value:"Running screenshot tests",id:"running-screenshot-tests",level:3},{value:"Updating baselines",id:"updating-baselines",level:3},{value:"Sample",id:"sample",level:3}],m={toc:p},g="wrapper";function f(e){let{components:t,...n}=e;return(0,r.kt)(g,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"configuring-testify-to-run-on-gradle-managed-device"},"Configuring Testify to run on Gradle managed device"),(0,r.kt)("p",null,"Starting from API levels\n27 ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/studio/test/gradle-managed-devices"},"Android Gradle Plugin allows you to configure virtual test devices in your project's Gradle files ",(0,r.kt)(i.Z,{mdxType:"OpenNew"})),".\nThis feature improves testing experience by delegating the task of starting, shutting down and\nmanaging emulator to the Gradle."),(0,r.kt)("p",null,"When using a Gradle Managed Device, you must use the ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/test/services/storage/TestStorage"},"Test storage service ",(0,r.kt)(i.Z,{mdxType:"OpenNew"}))," to save screenshots. Using this service, the Android Gradle Plugin will be able to save test output to your local ",(0,r.kt)("inlineCode",{parentName:"p"},"build")," folder."),(0,r.kt)("h3",{id:"adding-gradle-managed-device-configuration-to-build-file"},"Adding Gradle managed device configuration to build file"),(0,r.kt)("p",null,"To create new Gradle managed device add it's definition to the ",(0,r.kt)("inlineCode",{parentName:"p"},"build.gradle")," file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'\nandroid {\n    testOptions {\n        managedDevices {\n            devices {\n                NAME_OF_THE_DEVICE(com.android.build.api.dsl.ManagedVirtualDevice) {\n                    device = "Pixel 2"\n                    apiLevel = 30\n                    systemImageSource = "aosp"\n                }\n            }\n        }\n    }\n}\n\n')),(0,r.kt)("p",null,"In order to receive screenshots after test execution enable ",(0,r.kt)("inlineCode",{parentName:"p"},"TestStorageService"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},'\nandroid {\n    defaultConfig {\n        testInstrumentationRunnerArguments useTestStorageService: "true"\n    }\n}\n\ndependencies {\n    androidTestUtil("androidx.test.services:test-services:1.5.0")\n}\n')),(0,r.kt)("p",null,"With that changes applied, several new Gradle tasks will be added to your project. For a device named ",(0,r.kt)("em",{parentName:"p"},(0,r.kt)("strong",{parentName:"em"},"myDevice")),", then Gradle tasks ",(0,r.kt)("inlineCode",{parentName:"p"},"myDeviceCheck")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"myDeviceDebugAndroidTest")," tasks will be added to your project."),(0,r.kt)("h3",{id:"configuring-the-testify-library"},"Configuring the Testify library"),(0,r.kt)("p",null,"You also need to instruct Testify to use Test Storage to store screenshots and diffs. This is done using Testify plugin configuration by setting the ",(0,r.kt)("inlineCode",{parentName:"p"},"useTestStorage")," Gradle property to ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"testify {\n    useTestStorage = true\n}\n")),(0,r.kt)("h3",{id:"running-screenshot-tests"},"Running screenshot tests"),(0,r.kt)("p",null,"To perform screenshot test verification, run any of the new Gradle tasks, for example ",(0,r.kt)("inlineCode",{parentName:"p"},"./gradlew app:myDeviceDebugAndroidTest"),"."),(0,r.kt)("p",null,"Because we need to run specific Gradle tasks to execute our tests using the Gradle Managed Device, we cannot use ",(0,r.kt)("inlineCode",{parentName:"p"},"screenshotPull")," task. When execution is completed, navigate to the module's ",(0,r.kt)("inlineCode",{parentName:"p"},"build/outputs/managed_device_android_test_additional_output/myDevice")," folder to find the recorded screenshots or diffs."),(0,r.kt)("h3",{id:"updating-baselines"},"Updating baselines"),(0,r.kt)("p",null,"Because we need to run specific Gradle tasks to execute our tests using the Gradle Managed Device, we cannot use ",(0,r.kt)("inlineCode",{parentName:"p"},"screenshotRecord")," task. "),(0,r.kt)("p",null,"To generate new baseline there are two options:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Apply necessary configuration on the ",(0,r.kt)("inlineCode",{parentName:"li"},"ScreenshotRule"),":")),(0,r.kt)(o.Z,{mdxType:"Tabs"},(0,r.kt)(s.Z,{value:"rule",label:"ScreenshotTestRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@get:Rule\nval rule = ScreenshotRule(ClientListActivity::class.java)\n\n@ScreenshotInstrumentation\n@Test\nfun testMissingBaseline() {\n    rule\n        .configure { \n            isRecordMode = true\n        }\n        .assertSame()\n}\n"))),(0,r.kt)(s.Z,{value:"scenario",label:"ScreenshotScenarioRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@get:Rule\nvar rule = ScreenshotScenarioRule()\n\n@ScreenshotInstrumentation\n@Test\nfun testMissingBaseline() {\n    launchActivity<ClientListActivity>().use { scenario ->\n        rule\n            .withScenario(scenario)\n            .configure { \n                isRecordMode = true\n            }\n            .assertSame()\n    }\n}\n")))),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Enable record mode in the ",(0,r.kt)("inlineCode",{parentName:"li"},"build.gradle")," file:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-groovy"},"testify {\n    recordMode = true\n}\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"As we cannot use ",(0,r.kt)("inlineCode",{parentName:"p"},"screenshotPull")," task, when test execution is completed, the ",(0,r.kt)("em",{parentName:"p"},"Test Storage")," service will copy recorded files from the module's ",(0,r.kt)("inlineCode",{parentName:"p"},"build/outputs/managed_device_android_test_additional_output/myDevice")," into your ",(0,r.kt)("inlineCode",{parentName:"p"},"androidTest/assets/screenshots/")," directory."))),(0,r.kt)("h3",{id:"sample"},"Sample"),(0,r.kt)("p",null,"Please check provided ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/tree/main/Samples/Gmd"},"sample ",(0,r.kt)(i.Z,{mdxType:"OpenNew"})),"."),(0,r.kt)("hr",null))}f.isMDXComponent=!0}}]);