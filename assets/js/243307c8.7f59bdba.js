"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2054],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return r?n.createElement(f,i(i({ref:t},u),{},{components:r})):n.createElement(f,i({ref:t},u))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(7294),a=r(6010);const o={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:r,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o.tabItem,i),hidden:r},t)}},5488:(e,t,r)=>{r.d(t,{Z:()=>d});var n=r(7462),a=r(7294),o=r(6010),i=r(2389),s=r(7392),l=r(7094),c=r(2466);const u={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function p(e){const{lazy:t,block:r,defaultValue:i,values:p,groupId:d,className:m}=e,f=a.Children.map(e.children,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),b=p??f.map((e=>{let{props:{value:t,label:r,attributes:n}}=e;return{value:t,label:r,attributes:n}})),v=(0,s.l)(b,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const h=null===i?i:i??f.find((e=>e.props.default))?.props.value??f[0].props.value;if(null!==h&&!b.some((e=>e.value===h)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${h}" but none of its children has the corresponding value. Available values are: ${b.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:y,setTabGroupChoices:w}=(0,l.U)(),[g,k]=(0,a.useState)(h),T=[],{blockElementScrollPositionUntilNextRender:O}=(0,c.o5)();if(null!=d){const e=y[d];null!=e&&e!==g&&b.some((t=>t.value===e))&&k(e)}const E=e=>{const t=e.currentTarget,r=T.indexOf(t),n=b[r].value;n!==g&&(O(t),k(n),null!=d&&w(d,String(n)))},N=e=>{let t=null;switch(e.key){case"ArrowRight":{const r=T.indexOf(e.currentTarget)+1;t=T[r]??T[0];break}case"ArrowLeft":{const r=T.indexOf(e.currentTarget)-1;t=T[r]??T[T.length-1];break}}t?.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",u.tabList)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":r},m)},b.map((e=>{let{value:t,label:r,attributes:i}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>T.push(e),onKeyDown:N,onFocus:E,onClick:E},i,{className:(0,o.Z)("tabs__item",u.tabItem,i?.className,{"tabs__item--active":g===t})}),r??t)}))),t?(0,a.cloneElement)(f.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function d(e){const t=(0,i.Z)();return a.createElement(p,(0,n.Z)({key:String(t)},e))}},9349:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>l,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var n=r(7462),a=(r(7294),r(3905)),o=r(5488),i=r(5162);const s={},l="Taking a screenshot of an area less than that of the entire Activity",c={unversionedId:"recipes/view-provider",id:"recipes/view-provider",title:"Taking a screenshot of an area less than that of the entire Activity",description:"It is often desirable to capture only a portion of your screen or to capture a single View.",source:"@site/docs/recipes/1-view-provider.md",sourceDirName:"recipes",slug:"/recipes/view-provider",permalink:"/android-testify/docs/recipes/view-provider",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/recipes/1-view-provider.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Recipes",permalink:"/android-testify/docs/category/recipes"},next:{title:"Changing the Locale in a test",permalink:"/android-testify/docs/recipes/locale"}},u={},p=[],d={toc:p},m="wrapper";function f(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"taking-a-screenshot-of-an-area-less-than-that-of-the-entire-activity"},"Taking a screenshot of an area less than that of the entire Activity"),(0,a.kt)("p",null,"It is often desirable to capture only a portion of your screen or to capture a single ",(0,a.kt)("inlineCode",{parentName:"p"},"View"),".\nFor these cases, you can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"setScreenshotViewProvider")," to specify which ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," to capture."),(0,a.kt)("p",null,"Using ",(0,a.kt)("inlineCode",{parentName:"p"},"setScreenshotViewProvider"),", you must return a ",(0,a.kt)("inlineCode",{parentName:"p"},"View")," reference which will be used by Testify to narrow the bitmap to only that View."),(0,a.kt)(o.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"test",label:"ScreenshotTestRule",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"@TestifyLayout(R.layout.view_client_details)\n@ScreenshotInstrumentation\n@Test\nfun default() {\n    rule\n        .setScreenshotViewProvider {\n            it.findViewById(R.id.info_card)\n        }\n        .assertSame()\n}\n"))),(0,a.kt)(i.Z,{value:"scenario",label:"ScreenshotScenarioRule",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-kotlin"},"@TestifyLayout(R.layout.view_client_details)\n@ScreenshotInstrumentation\n@Test\nfun default() {\n    launchActivity<TestHarnessActivity>().use { scenario ->\n        rule\n            .withScenario(scenario)\n            .setScreenshotViewProvider {\n                it.findViewById(R.id.info_card)\n            }\n            .assertSame()\n    }\n}\n")))))}f.isMDXComponent=!0}}]);