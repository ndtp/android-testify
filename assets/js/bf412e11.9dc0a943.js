"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7096],{3905:(t,e,n)=>{n.d(e,{Zo:()=>u,kt:()=>m});var o=n(7294);function i(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){i(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,o,i=function(t,e){if(null==t)return{};var n,o,i={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}var l=o.createContext({}),c=function(t){var e=o.useContext(l),n=e;return t&&(n="function"==typeof t?t(e):a(a({},e),t)),n},u=function(t){var e=c(t.components);return o.createElement(l.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},h=o.forwardRef((function(t,e){var n=t.components,i=t.mdxType,r=t.originalType,l=t.parentName,u=s(t,["components","mdxType","originalType","parentName"]),p=c(n),h=i,m=p["".concat(l,".").concat(h)]||p[h]||d[h]||r;return n?o.createElement(m,a(a({ref:e},u),{},{components:n})):o.createElement(m,a({ref:e},u))}));function m(t,e){var n=arguments,i=e&&e.mdxType;if("string"==typeof t||i){var r=n.length,a=new Array(r);a[0]=h;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=t,s[p]="string"==typeof t?t:i,a[1]=s;for(var c=2;c<r;c++)a[c]=n[c];return o.createElement.apply(null,a)}return o.createElement.apply(null,n)}h.displayName="MDXCreateElement"},7427:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var o=n(7462),i=(n(7294),n(3905));const r={title:"Customizing Screenshot Instrumentation Annotation",description:"Customizing Screenshot Instrumentation Annotation",slug:"custom-annotations",authors:[{name:"Daniel Jette",title:"Core Contributor to Android Testify",url:"https://github.com/DanielJette",image_url:"https://github.com/DanielJette.png"}],tags:["annotations","customization"],hide_table_of_contents:!1},a="Introducing a New Testify Setting: Customizing Screenshot Instrumentation Annotation",s={permalink:"/android-testify/blog/custom-annotations",editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/blog/2023-04-25-custom-annotations.md",source:"@site/blog/2023-04-25-custom-annotations.md",title:"Customizing Screenshot Instrumentation Annotation",description:"Customizing Screenshot Instrumentation Annotation",date:"2023-04-25T00:00:00.000Z",formattedDate:"April 25, 2023",tags:[{label:"annotations",permalink:"/android-testify/blog/tags/annotations"},{label:"customization",permalink:"/android-testify/blog/tags/customization"}],readingTime:1.61,truncated:!1,authors:[{name:"Daniel Jette",title:"Core Contributor to Android Testify",url:"https://github.com/DanielJette",image_url:"https://github.com/DanielJette.png",imageURL:"https://github.com/DanielJette.png"}],frontMatter:{title:"Customizing Screenshot Instrumentation Annotation",description:"Customizing Screenshot Instrumentation Annotation",slug:"custom-annotations",authors:[{name:"Daniel Jette",title:"Core Contributor to Android Testify",url:"https://github.com/DanielJette",image_url:"https://github.com/DanielJette.png",imageURL:"https://github.com/DanielJette.png"}],tags:["annotations","customization"],hide_table_of_contents:!1},prevItem:{title:"Gradle Managed Devices Support",permalink:"/android-testify/blog/gradle-managed-device"},nextItem:{title:"Accounting for platform differences",permalink:"/android-testify/blog/platform-differences"}},l={authorsImageUrls:[void 0]},c=[{value:"Why This Change?",id:"why-this-change",level:2},{value:"How to Use the New Setting",id:"how-to-use-the-new-setting",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:c},p="wrapper";function d(t){let{components:e,...n}=t;return(0,i.kt)(p,(0,o.Z)({},u,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Testify is a powerful Android plugin that provides a selection of utility tasks for advanced use cases in screenshot testing. With Testify, developers can easily create, compare, and report screenshots of their app across different devices, locales, and screen sizes."),(0,i.kt)("p",null,"In the latest release of Testify, we've added a new setting that allows developers to customize the instrumentation annotation used to identify which test is a screenshot test. This means that the @ScreenshotInstrumentation annotation is no longer a required element in your code."),(0,i.kt)("h2",{id:"why-this-change"},"Why This Change?"),(0,i.kt)("p",null,"The @ScreenshotInstrumentation annotation was previously required for Testify to identify screenshot tests. This annotation added an additional layer of complexity to the testing process and could cause confusion for developers who were new to Testify. By introducing the ability to customize the annotation, we hope to simplify the testing process and make Testify more accessible to a wider range of developers."),(0,i.kt)("h2",{id:"how-to-use-the-new-setting"},"How to Use the New Setting"),(0,i.kt)("p",null,"To use the new Testify setting, developers can now add a ",(0,i.kt)("inlineCode",{parentName:"p"},"screenshotAnnotation")," parameter to their build.gradle file. This parameter allows developers to specify the name of the annotation that they are using for their screenshot tests. Here's an example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-gradle"},'testify {\n  // Set the instrumentation annotation used for screenshot tests\n  screenshotAnnotation = "com.example.MyScreenshotAnnotation"\n}\n')),(0,i.kt)("p",null,'In this example, we\'re setting the screenshotAnnotation parameter to "com.example.MyScreenshotAnnotation". This tells Testify to look for tests annotated with @com.example.MyScreenshotAnnotation to identify screenshot tests.'),(0,i.kt)("p",null,"If you don't specify a screenshotAnnotation, Testify will use the default @ScreenshotInstrumentation annotation."),(0,i.kt)("h2",{id:"conclusion"},"Conclusion"),(0,i.kt)("p",null,"By adding the ability to customize the instrumentation annotation used to identify screenshot tests, we've made Testify even more powerful and accessible to developers. We hope that this new setting will simplify the testing process and make it easier for more developers to use Testify in their Android apps."),(0,i.kt)("p",null,"If you have any questions or feedback on this new feature, please don't hesitate to reach out to us on our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ndtp/android-testify/issues"},"GitHub")," page."))}d.isMDXComponent=!0}}]);