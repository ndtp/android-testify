"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4513],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),l=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||i;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[d]="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6324:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var a=n(7462),r=(n(7294),n(3905));const i={},o="Write a test",s={unversionedId:"get-started/write-a-test",id:"get-started/write-a-test",title:"Write a test",description:"Testify provides two main entrypoints as JUnit4 TestRule subclasses.",source:"@site/docs/get-started/3-write-a-test.md",sourceDirName:"get-started",slug:"/get-started/write-a-test",permalink:"/android-testify/docs/get-started/write-a-test",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/get-started/3-write-a-test.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configure your emulator to run Testify tests",permalink:"/android-testify/docs/get-started/configuring-an-emulator"},next:{title:"Update your baseline",permalink:"/android-testify/docs/get-started/update-baseline"}},c={},l=[{value:"ScreenshotScenarioRule",id:"screenshotscenariorule",level:2},{value:"ScreenshotTestRule",id:"screenshottestrule",level:2},{value:"Jetpack Compose",id:"jetpack-compose",level:2}],p={toc:l},d="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"write-a-test"},"Write a test"),(0,r.kt)("p",null,"Testify provides two main entrypoints as JUnit4 ",(0,r.kt)("a",{parentName:"p",href:"https://junit.org/junit4/javadoc/4.12/org/junit/rules/TestRule.html"},(0,r.kt)("inlineCode",{parentName:"a"},"TestRule"))," subclasses."),(0,r.kt)("p",null,"The classic implementation of Testify uses ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotTestRule"),". While starting in Testify 2.1.0, you have access to the newer ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotScenarioRule"),". Both rules provide similar functionality."),(0,r.kt)("h2",{id:"screenshotscenariorule"},"ScreenshotScenarioRule"),(0,r.kt)("p",null,"As ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/test/rule/ActivityTestRule"},"ActivityTestRule is deprecated"),", the Android SDK now recommends the usage of ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/test/core/app/ActivityScenario"},(0,r.kt)("inlineCode",{parentName:"a"},"ActivityScenario"))," as the modern alternative. Testify provides ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotScenarioRule")," which works in conjunction with ",(0,r.kt)("inlineCode",{parentName:"p"},"ActivityScenario")," to easily add screenshot tests to scenario-based UI tests."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotScenarioRule")," is more flexible than the older ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotTestRule")," as it no longer requires you to couple the rule's instantiatiation with a specific Activity subclass. This allows the flexibility of testing multiple different activities in the same test class."),(0,r.kt)("p",null,"Screenshot test integration with ",(0,r.kt)("inlineCode",{parentName:"p"},"ActivityScenario")," is achieved via the ",(0,r.kt)("inlineCode",{parentName:"p"},"withScenario()")," function. An active instance of a scenario must be provided to Testify prior to calling ",(0,r.kt)("inlineCode",{parentName:"p"},"assertSame()"),". Typically, this is done by passing the scaneario instance returned by ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/test/core/app/ActivityScenario#launch(java.lang.Class%3CA%3E)"},(0,r.kt)("inlineCode",{parentName:"a"},"ActivityScenario.launch"))," to the ",(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotScenarioRule")," instance within a ",(0,r.kt)("inlineCode",{parentName:"p"},"use {}")," block."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"To enable ",(0,r.kt)("a",{parentName:"p",href:"set-up-intellij-plugin"},"Android Studio Plugin")," integration with your tests, each test method should be annotated with the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ScreenshotInstrumentation")," annotation."))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"import androidx.test.core.app.launchActivity\nimport dev.testify.MainActivity\nimport dev.testify.annotation.ScreenshotInstrumentation\nimport org.junit.Rule\nimport org.junit.Test\n\nclass MainActivityScreenshotTest {\n\n    @get:Rule val rule = ScreenshotScenarioRule()\n\n    @ScreenshotInstrumentation\n    @Test\n    fun default() {\n        launchActivity<MainActivity>().use { scenario ->\n            screenshotRule.withScenario(scenario).assertSame()\n        }\n    }\n}\n")),(0,r.kt)("h2",{id:"screenshottestrule"},"ScreenshotTestRule"),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/test/rule/ActivityTestRule"},"ActivityTestRule is deprecated")),(0,r.kt)("p",{parentName:"div"},"Use ",(0,r.kt)("strong",{parentName:"p"},"androidx.test.core.app.ActivityScenario")," instead with ",(0,r.kt)("a",{parentName:"p",href:"#screenshotscenariorule"},(0,r.kt)("strong",{parentName:"a"},"ScreenshotScenarioRule")),"."))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ScreenshotTestRule")," is a subclass of Android's ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/androidx/test/rule/ActivityTestRule.html"},(0,r.kt)("inlineCode",{parentName:"a"},"ActivityTestRule")),". The testing framework launches the activity under test before each test method annotated with ",(0,r.kt)("a",{parentName:"p",href:"https://junit.org/junit4/javadoc/latest/org/junit/Test.html"},(0,r.kt)("inlineCode",{parentName:"a"},"@Test"))," and before any method annotated with ",(0,r.kt)("a",{parentName:"p",href:"http://junit.sourceforge.net/javadoc/org/junit/Before.html"},(0,r.kt)("inlineCode",{parentName:"a"},"@Before")),". "),(0,r.kt)("p",null,"Each screenshot test method must be annotated with the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ScreenshotInstrumentation")," annotation."),(0,r.kt)("p",null,"Within your test method, you can configure the ",(0,r.kt)("inlineCode",{parentName:"p"},"Activity")," as needed and call ",(0,r.kt)("inlineCode",{parentName:"p"},"assertSame()")," to capture and validate your UI. The framework handles shutting down the activity after the test finishes and all methods annotated with ",(0,r.kt)("a",{parentName:"p",href:"http://junit.sourceforge.net/javadoc/org/junit/After.html"},(0,r.kt)("inlineCode",{parentName:"a"},"@After"))," are run."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"@RunWith(AndroidJUnit4::class)\nclass MainActivityScreenshotTest {\n\n    @get:Rule val rule = ScreenshotRule(MainActivity::class.java)\n\n    @ScreenshotInstrumentation\n    @Test\n    fun default() {\n        rule.assertSame()\n    }\n}\n")),(0,r.kt)("h2",{id:"jetpack-compose"},"Jetpack Compose"),(0,r.kt)("p",null,"Using Jetpack Compose in your application? Check out the ",(0,r.kt)("a",{parentName:"p",href:"../category/jetpack-compose"},"Jetpack Compose Extension for Android Testify")),(0,r.kt)("hr",null))}u.isMDXComponent=!0}}]);