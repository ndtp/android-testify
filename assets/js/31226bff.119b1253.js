"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7324],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>h});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||i;return a?n.createElement(h,o(o({ref:t},c),{},{components:a})):n.createElement(h,o({ref:t},c))}));function h(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},7385:(e,t,a)=>{a.d(t,{Z:()=>i});var n=a(7294);function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e},r.apply(this,arguments)}const i=e=>{let{title:t,titleId:a,...i}=e;return n.createElement("svg",r({xmlns:"http://www.w3.org/2000/svg",width:16,height:16,viewBox:"0 0 16 16","aria-labelledby":a},i),t?n.createElement("title",{id:a},t):null,n.createElement("path",{style:{stroke:"none",fillRule:"nonzero",fill:"#9e80b5",fillOpacity:1},d:"M3 14a.947.947 0 0 1-.7-.3.947.947 0 0 1-.3-.7V3c0-.266.098-.5.3-.7.2-.202.434-.3.7-.3h4.652v1H3v10h10V8.348h1V13c0 .266-.098.5-.3.7-.2.202-.434.3-.7.3Zm3.367-3.652-.699-.715L12.301 3H8.652V2H14v5.348h-1V3.715Zm0 0"}))}},5162:(e,t,a)=>{a.d(t,{Z:()=>o});var n=a(7294),r=a(6010);const i={tabItem:"tabItem_Ymn6"};function o(e){let{children:t,hidden:a,className:o}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(i.tabItem,o),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>u});var n=a(7462),r=a(7294),i=a(6010),o=a(2389),l=a(7392),s=a(7094),p=a(2466);const c={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function m(e){const{lazy:t,block:a,defaultValue:o,values:m,groupId:u,className:d}=e,h=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})),f=m??h.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),v=(0,l.l)(f,((e,t)=>e.value===t.value));if(v.length>0)throw new Error(`Docusaurus error: Duplicate values "${v.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`);const y=null===o?o:o??h.find((e=>e.props.default))?.props.value??h[0].props.value;if(null!==y&&!f.some((e=>e.value===y)))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${y}" but none of its children has the corresponding value. Available values are: ${f.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);const{tabGroupChoices:b,setTabGroupChoices:k}=(0,s.U)(),[g,w]=(0,r.useState)(y),N=[],{blockElementScrollPositionUntilNextRender:C}=(0,p.o5)();if(null!=u){const e=b[u];null!=e&&e!==g&&f.some((t=>t.value===e))&&w(e)}const T=e=>{const t=e.currentTarget,a=N.indexOf(t),n=f[a].value;n!==g&&(C(t),w(n),null!=u&&k(u,String(n)))},x=e=>{let t=null;switch(e.key){case"ArrowRight":{const a=N.indexOf(e.currentTarget)+1;t=N[a]??N[0];break}case"ArrowLeft":{const a=N.indexOf(e.currentTarget)-1;t=N[a]??N[N.length-1];break}}t?.focus()};return r.createElement("div",{className:(0,i.Z)("tabs-container",c.tabList)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":a},d)},f.map((e=>{let{value:t,label:a,attributes:o}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:g===t?0:-1,"aria-selected":g===t,key:t,ref:e=>N.push(e),onKeyDown:x,onFocus:T,onClick:T},o,{className:(0,i.Z)("tabs__item",c.tabItem,o?.className,{"tabs__item--active":g===t})}),a??t)}))),t?(0,r.cloneElement)(h.filter((e=>e.props.value===g))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},h.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==g})))))}function u(e){const t=(0,o.Z)();return r.createElement(m,(0,n.Z)({key:String(t)},e))}},2179:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>m,contentTitle:()=>p,default:()=>f,frontMatter:()=>s,metadata:()=>c,toc:()=>u});var n=a(7462),r=(a(7294),a(3905)),i=a(5488),o=a(5162),l=a(7385);const s={},p="Customizing the captured bitmap",c={unversionedId:"recipes/custom-bitmap",id:"recipes/custom-bitmap",title:"Customizing the captured bitmap",description:"In some instances, it may be useful to modify or customize the captured Bitmap. For example, you may wish to annotate the screenshot with certain diagnostic information, print the name of the test, or add a watermark.",source:"@site/docs/recipes/16-custom-bitmap.md",sourceDirName:"recipes",slug:"/recipes/custom-bitmap",permalink:"/android-testify/docs/recipes/custom-bitmap",draft:!1,editUrl:"https://github.com/ndtp/android-testify/tree/issue-12/docusaurus/docs/docs/recipes/16-custom-bitmap.md",tags:[],version:"current",sidebarPosition:16,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Placing the keyboard focus on a specific view",permalink:"/android-testify/docs/recipes/keyboard-focus"},next:{title:"Providing a custom comparison method",permalink:"/android-testify/docs/recipes/custom-compare"}},m={},u=[{value:"Available <em>ScreenshotUtility</em> helper functions",id:"available-screenshotutility-helper-functions",level:3},{value:"Wordmark example",id:"wordmark-example",level:3}],d={toc:u},h="wrapper";function f(e){let{components:t,...a}=e;return(0,r.kt)(h,(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"customizing-the-captured-bitmap"},"Customizing the captured bitmap"),(0,r.kt)("p",null,"In some instances, it may be useful to modify or customize the captured Bitmap. For example, you may wish to annotate the screenshot with certain diagnostic information, print the name of the test, or add a watermark."),(0,r.kt)("p",null,"You can leverage the ",(0,r.kt)("inlineCode",{parentName:"p"},"TestifyConfiguration.captureMethod")," configuration function property for this purpose."),(0,r.kt)("p",null,"To configure a custom capture method, provide a function that conforms to the ",(0,r.kt)("inlineCode",{parentName:"p"},"CaptureMethod")," signature. A ",(0,r.kt)("inlineCode",{parentName:"p"},"CaptureMethod")," returns a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/graphics/Bitmap"},(0,r.kt)("inlineCode",{parentName:"a"},"Bitmap")," ",(0,r.kt)(l.Z,{mdxType:"OpenNew"}))," from the provided ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/app/Activity"},(0,r.kt)("inlineCode",{parentName:"a"},"Activity"),(0,r.kt)(l.Z,{mdxType:"OpenNew"}))," and ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/view/View"},(0,r.kt)("inlineCode",{parentName:"a"},"View"),(0,r.kt)(l.Z,{mdxType:"OpenNew"})),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"typealias CaptureMethod = (activity: Activity, targetView: View?) -> Bitmap?\n")),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Testify provides ",(0,r.kt)("a",{parentName:"p",href:"capture-method"},"3 built-in capture methods")," as well as a ",(0,r.kt)("a",{parentName:"p",href:"../category/fullscreen-capture-method"},"Fullscreen capture method extension")," which may provide the functionality you need without requiring you to write your own."))),(0,r.kt)("p",null,"Within the body of the ",(0,r.kt)("inlineCode",{parentName:"p"},"CaptureMethod"),", you can use any mechanism you'd like to create or modify the ",(0,r.kt)("inlineCode",{parentName:"p"},"Bitmap"),". The only requirement is that you return a valid ",(0,r.kt)("inlineCode",{parentName:"p"},"Bitmap"),". Testify provides a variety of useful helper functions, classes and extension methods that you can use to build your own capture method."),(0,r.kt)("h3",{id:"available-screenshotutility-helper-functions"},"Available ",(0,r.kt)("em",{parentName:"h3"},"ScreenshotUtility")," helper functions"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"createBitmapFromActivity"),": Capture a ",(0,r.kt)("inlineCode",{parentName:"li"},"Bitmap")," from the given ",(0,r.kt)("inlineCode",{parentName:"li"},"Activity")," and save it to the screenshots directory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"deleteBitmap"),": Delete the ",(0,r.kt)("inlineCode",{parentName:"li"},"File")," specified by ",(0,r.kt)("inlineCode",{parentName:"li"},"Destination"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"loadBaselineBitmapForComparison"),": Load a baseline ",(0,r.kt)("inlineCode",{parentName:"li"},"Bitmap")," from the androidTest assets directory."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"loadBitmapFromFile"),": Decode the file specified by a path into a ",(0,r.kt)("inlineCode",{parentName:"li"},"Bitmap"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"preferredBitmapOptions"),": The default, preferred ",(0,r.kt)("inlineCode",{parentName:"li"},"BitmapFactory.Options")," to use when decoding a ",(0,r.kt)("inlineCode",{parentName:"li"},"Bitmap"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"saveBitmapToDestination"),": Write the given ",(0,r.kt)("inlineCode",{parentName:"li"},"Bitmap")," to the ",(0,r.kt)("inlineCode",{parentName:"li"},"Destination")," file.")),(0,r.kt)("h3",{id:"wordmark-example"},"Wordmark example"),(0,r.kt)("p",null,"In this example, we add the wordmark ",(0,r.kt)("em",{parentName:"p"},"Testify")," and the test name to the bottom of the captured image. We use the ScreenshotUtility function ",(0,r.kt)("inlineCode",{parentName:"p"},"createBitmapFromDrawingCache()")," to capture a ",(0,r.kt)("inlineCode",{parentName:"p"},"Bitmap")," from the provided activity. The, we wrap the ",(0,r.kt)("inlineCode",{parentName:"p"},"Bitmap")," in a ",(0,r.kt)("a",{parentName:"p",href:"https://developer.android.com/reference/android/graphics/Canvas"},(0,r.kt)("inlineCode",{parentName:"a"},"Canvas"),(0,r.kt)(l.Z,{mdxType:"OpenNew"}))," and use the canvas' ",(0,r.kt)("inlineCode",{parentName:"p"},"drawText")," method to render text on the bitmap."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("img",{width:"200",src:"https://github.com/ndtp/android-testify/blob/main/Samples/Legacy/src/androidTest/assets/screenshots/29-1080x2220@440dp-en_US/ScreenshotRuleExampleTests_captureMethodExample.png?raw=true"}))))),(0,r.kt)(i.Z,{mdxType:"Tabs"},(0,r.kt)(o.Z,{value:"rule",label:"ScreenshotTestRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'@ScreenshotInstrumentation\n@Test\nfun captureMethodExample() {\n    rule\n        .configure {\n            captureMethod = { activity, targetView ->\n                /* Return a Bitmap */\n                createBitmapFromDrawingCache(activity, targetView).apply {\n                    /* Wrap the Bitmap in a Canvas so we can draw on it */\n                    Canvas(this).apply {\n                        /* Add a wordmark to the captured image */\n                        val textPaint = Paint().apply {\n                            color = Color.BLACK\n                            textSize = 50f\n                            isAntiAlias = true\n                        }\n                        this.drawText(\n                            "<<Testify ${getInstrumentation().testDescription.methodName}>>",\n                            50f,\n                            2000f,\n                            textPaint\n                        )\n                    }\n                }\n            }\n        }\n        .assertSame()\n}\n'))),(0,r.kt)(o.Z,{value:"scenario",label:"ScreenshotScenarioRule",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'@ScreenshotInstrumentation\n@Test\nfun captureMethodExample() {\n    launchActivity<TestHarnessActivity>().use { scenario ->\n        fun customCaptureMethod(activity: Activity, targetView: View?): Bitmap =\n            /* Return a Bitmap */\n            createBitmapFromDrawingCache(activity, targetView).apply {\n                /* Wrap the Bitmap in a Canvas so we can draw on it */\n                Canvas(this).apply {\n                    /* Add a wordmark to the captured image */\n                    val textPaint = Paint().apply {\n                        color = Color.BLACK\n                        textSize = 50f\n                        isAntiAlias = true\n                    }\n                    this.drawText(\n                        "<<Testify ${InstrumentationRegistry.getInstrumentation().testDescription.methodName}>>",\n                        50f,\n                        2000f,\n                        textPaint\n                    )\n                }\n            }\n\n        rule\n            .withScenario(scenario)\n            .configure {\n                captureMethod = ::customCaptureMethod\n            }\n            .assertSame()\n    }\n}\n')))))}f.isMDXComponent=!0}}]);