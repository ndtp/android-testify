"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"3.2.2","banner":null,"badge":true,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Android Screenshot Testing","href":"/android-testify/docs/intro","docId":"intro"},{"type":"category","label":"Get Started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Set up an Android application project to use Testify","href":"/android-testify/docs/get-started/setup","docId":"get-started/setup"},{"type":"link","label":"Configure your emulator to run Testify tests","href":"/android-testify/docs/get-started/configuring-an-emulator","docId":"get-started/configuring-an-emulator"},{"type":"link","label":"Write a test","href":"/android-testify/docs/get-started/write-a-test","docId":"get-started/write-a-test"},{"type":"link","label":"Update your baseline","href":"/android-testify/docs/get-started/update-baseline","docId":"get-started/update-baseline"},{"type":"link","label":"Verify the tests","href":"/android-testify/docs/get-started/verify-tests","docId":"get-started/verify-tests"},{"type":"link","label":"Install and use the Android Studio Plugin","href":"/android-testify/docs/get-started/set-up-intellij-plugin","docId":"get-started/set-up-intellij-plugin"},{"type":"link","label":"Use the Gradle Plugin tasks","href":"/android-testify/docs/get-started/use-gradle-plugin","docId":"get-started/use-gradle-plugin"}],"href":"/android-testify/docs/category/get-started"},{"type":"category","label":"Extensions","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Accessibility Checks","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Accessibility Checks Overview","href":"/android-testify/docs/extensions/accessibility/overview","docId":"extensions/accessibility/overview"},{"type":"link","label":"Set up testify-accessibility","href":"/android-testify/docs/extensions/accessibility/setup","docId":"extensions/accessibility/setup"},{"type":"link","label":"Perform accessibility-related checks","href":"/android-testify/docs/extensions/accessibility/test","docId":"extensions/accessibility/test"}],"href":"/android-testify/docs/category/accessibility-checks"},{"type":"category","label":"Jetpack Compose","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Set up testify-compose","href":"/android-testify/docs/extensions/compose/setup","docId":"extensions/compose/setup"},{"type":"link","label":"Test a Composable","href":"/android-testify/docs/extensions/compose/test","docId":"extensions/compose/test"},{"type":"link","label":"Interoperability with ComposeTestRule","href":"/android-testify/docs/extensions/compose/compose-test-rule","docId":"extensions/compose/compose-test-rule"},{"type":"link","label":"Testing with different Locales and Font Scales","href":"/android-testify/docs/extensions/compose/resource-wrapping","docId":"extensions/compose/resource-wrapping"}],"href":"/android-testify/docs/category/jetpack-compose"},{"type":"category","label":"Fullscreen Capture Method","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Fullscreen Capture Method Overview","href":"/android-testify/docs/extensions/fullscreen/overview","docId":"extensions/fullscreen/overview"},{"type":"link","label":"Set up testify-fullscreen","href":"/android-testify/docs/extensions/fullscreen/setup","docId":"extensions/fullscreen/setup"},{"type":"link","label":"Write a full-screen screenshot test","href":"/android-testify/docs/extensions/fullscreen/test","docId":"extensions/fullscreen/test"}],"href":"/android-testify/docs/category/fullscreen-capture-method"}],"href":"/android-testify/docs/category/extensions"},{"type":"category","label":"Recipes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Taking a screenshot of an area less than that of the entire Activity","href":"/android-testify/docs/recipes/view-provider","docId":"recipes/view-provider"},{"type":"link","label":"Changing the Locale in a test","href":"/android-testify/docs/recipes/locale","docId":"recipes/locale"},{"type":"link","label":"Changing the font scale in a test","href":"/android-testify/docs/recipes/font-scale","docId":"recipes/font-scale"},{"type":"link","label":"Increase the matching tolerance","href":"/android-testify/docs/recipes/tolerance","docId":"recipes/tolerance"},{"type":"link","label":"Using @TestifyLayout with library projects","href":"/android-testify/docs/recipes/testify-layout-library","docId":"recipes/testify-layout-library"},{"type":"link","label":"Passing Intent extras to the Activity under test","href":"/android-testify/docs/recipes/intents","docId":"recipes/intents"},{"type":"link","label":"Specifying a layout resource programmatically","href":"/android-testify/docs/recipes/layout-resource","docId":"recipes/layout-resource"},{"type":"link","label":"Use Espresso UI tests with Testify","href":"/android-testify/docs/recipes/espresso","docId":"recipes/espresso"},{"type":"link","label":"Writing a test in Java","href":"/android-testify/docs/recipes/java","docId":"recipes/java"},{"type":"link","label":"Changing the orientation of the screen","href":"/android-testify/docs/recipes/orientation","docId":"recipes/orientation"},{"type":"link","label":"Debugging with the Layout Inspector","href":"/android-testify/docs/recipes/layout-inspector","docId":"recipes/layout-inspector"},{"type":"link","label":"Selecting an alternative capture method","href":"/android-testify/docs/recipes/capture-method","docId":"recipes/capture-method"},{"type":"link","label":"Force software rendering","href":"/android-testify/docs/recipes/software-rendering","docId":"recipes/software-rendering"},{"type":"link","label":"Excluding a region from the comparison","href":"/android-testify/docs/recipes/exclude-regions","docId":"recipes/exclude-regions"},{"type":"link","label":"Placing the keyboard focus on a specific view","href":"/android-testify/docs/recipes/keyboard-focus","docId":"recipes/keyboard-focus"},{"type":"link","label":"Customizing the captured bitmap","href":"/android-testify/docs/recipes/custom-bitmap","docId":"recipes/custom-bitmap"},{"type":"link","label":"Providing a custom comparison method","href":"/android-testify/docs/recipes/custom-compare","docId":"recipes/custom-compare"},{"type":"link","label":"Configuring Testify to write to the SDCard","href":"/android-testify/docs/recipes/sdcard","docId":"recipes/sdcard"},{"type":"link","label":"Multi-user support","href":"/android-testify/docs/recipes/multi-user","docId":"recipes/multi-user"},{"type":"link","label":"Configuring Testify to run on Gradle managed device","href":"/android-testify/docs/recipes/gmd","docId":"recipes/gmd"},{"type":"link","label":"Configuring Testify for Android Library Projects","href":"/android-testify/docs/recipes/library-projects","docId":"recipes/library-projects"}],"href":"/android-testify/docs/category/recipes"},{"type":"link","label":"Migrate to Testify 2.0","href":"/android-testify/docs/migration","docId":"migration"}]},"docs":{"extensions/accessibility/overview":{"id":"extensions/accessibility/overview","title":"Accessibility Checks Overview","description":"To help people with disabilities access Android apps, developers of those apps need to consider how their apps will be presented to accessibility services. Some good practices can be checked by automated tools, such as if a View has a contentDescription. Other rules require human judgment, such as whether or not a contentDescription makes sense to all users. Testify Accessibility can be used to verify common errors that lead to a poorly accessible application.","sidebar":"tutorialSidebar"},"extensions/accessibility/setup":{"id":"extensions/accessibility/setup","title":"Set up testify-accessibility","description":"Prerequisites","sidebar":"tutorialSidebar"},"extensions/accessibility/test":{"id":"extensions/accessibility/test","title":"Perform accessibility-related checks","description":"This library collects various accessibility-related checks on View objects as well as AccessibilityNodeInfo objects (which the Android framework derives from Views and sends to AccessibilityServices).","sidebar":"tutorialSidebar"},"extensions/compose/compose-test-rule":{"id":"extensions/compose/compose-test-rule","title":"Interoperability with ComposeTestRule","description":"A ComposeTestRule is a TestRule that allows you to test and control composables and applications using Compose. You can read more about Testing your Compose layout here.","sidebar":"tutorialSidebar"},"extensions/compose/resource-wrapping":{"id":"extensions/compose/resource-wrapping","title":"Testing with different Locales and Font Scales","description":"Locales","sidebar":"tutorialSidebar"},"extensions/compose/setup":{"id":"extensions/compose/setup","title":"Set up testify-compose","description":"Prerequisites","sidebar":"tutorialSidebar"},"extensions/compose/test":{"id":"extensions/compose/test","title":"Test a Composable","description":"In order to test a @Composable function, you must first declare an instance variable of the ComposableScreenshotRule class. You will be using this rule instead of the default ScreenshotTestRule.","sidebar":"tutorialSidebar"},"extensions/fullscreen/overview":{"id":"extensions/fullscreen/overview","title":"Fullscreen Capture Method Overview","description":"Test your app as your user sees it","sidebar":"tutorialSidebar"},"extensions/fullscreen/setup":{"id":"extensions/fullscreen/setup","title":"Set up testify-fullscreen","description":"Prerequisites","sidebar":"tutorialSidebar"},"extensions/fullscreen/test":{"id":"extensions/fullscreen/test","title":"Write a full-screen screenshot test","description":"In order to capture the full device screen, you must set the capture method on ScreenshotRule to fullscreenCapture().","sidebar":"tutorialSidebar"},"get-started/configuring-an-emulator":{"id":"get-started/configuring-an-emulator","title":"Configure your emulator to run Testify tests","description":"The Sample application includes a baseline for an emulator that\'s compatible with GitHub Actions. To configure an AVD locally, create a new virtual device with the following settings in the Android Virtual Device (AVD) configuration:","sidebar":"tutorialSidebar"},"get-started/set-up-intellij-plugin":{"id":"get-started/set-up-intellij-plugin","title":"Install and use the Android Studio Plugin","description":"Testify screenshot tests are built on top of Android Instrumentation tests and so already integrate seamlessly with existing test suites. Screenshots can be captured directly from within Android Studio or using the Gradle command-line tools.","sidebar":"tutorialSidebar"},"get-started/setup":{"id":"get-started/setup","title":"Set up an Android application project to use Testify","description":"Before building your screenshot test with Testify, make sure to set a dependency reference to the Testify plugin:","sidebar":"tutorialSidebar"},"get-started/update-baseline":{"id":"get-started/update-baseline","title":"Update your baseline","description":"Testify works by referencing a PNG baseline found in your androidTest/assets directory for each test case that you write. As you write and run tests, an updated baseline image is maintained on your device or emulator. In order to update the baseline, you need to copy or pull the image from the device to your local development environment. Testify offers a variety of Gradle tasks to simplify the copying of your baseline images.","sidebar":"tutorialSidebar"},"get-started/use-gradle-plugin":{"id":"get-started/use-gradle-plugin","title":"Use the Gradle Plugin tasks","description":"The Testify Android Gradle Plugin offers a suite of tasks to conveniently integrate Testify into the normal Android development workflow. It integrates seamlessly with existing test suites, providing tools for running, recording, and managing screenshot tests. The plugin enhances testing efficiency by simplifying device and emulator configurations and supports Android Studio integration for a streamlined workflow. For more details and specific instructions, please refer to the Recipe Book.","sidebar":"tutorialSidebar"},"get-started/verify-tests":{"id":"get-started/verify-tests","title":"Verify the tests","description":"You can use Android Studio\'s built-in test runner to run your tests. Or, you can invoke the gradle task screenshotTest to run all the screenshot tests in your app. The test will fail if any differences from the baseline are detected.","sidebar":"tutorialSidebar"},"get-started/write-a-test":{"id":"get-started/write-a-test","title":"Write a test","description":"Testify provides two main entrypoints as JUnit4 TestRule subclasses.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Android Screenshot Testing","description":"Testify","sidebar":"tutorialSidebar"},"migration":{"id":"migration","title":"Migrate to Testify 2.0","description":"dev.testify replaces the original classes in the com.shopify.testify namespace. Only the package and Maven artifact names changed; class, method, and field names did not change.","sidebar":"tutorialSidebar"},"recipes/capture-method":{"id":"recipes/capture-method","title":"Selecting an alternative capture method","description":"Testify provides three built-in bitmap capture methods. Each method will capture slightly different results based primarily on API level. In addition, a Fullscreen Capture Method is provided as an optional extension.","sidebar":"tutorialSidebar"},"recipes/custom-bitmap":{"id":"recipes/custom-bitmap","title":"Customizing the captured bitmap","description":"In some instances, it may be useful to modify or customize the captured Bitmap. For example, you may wish to annotate the screenshot with certain diagnostic information, print the name of the test, or add a watermark.","sidebar":"tutorialSidebar"},"recipes/custom-compare":{"id":"recipes/custom-compare","title":"Providing a custom comparison method","description":"There are many scenarios where","sidebar":"tutorialSidebar"},"recipes/espresso":{"id":"recipes/espresso","title":"Use Espresso UI tests with Testify","description":"ScreenshotRule.setEspressoActions accepts a lambda of type EspressoActions in which you may define any number of Espresso actions. These actions are executed after the activity is fully inflated and any view modifications have been applied.","sidebar":"tutorialSidebar"},"recipes/exclude-regions":{"id":"recipes/exclude-regions","title":"Excluding a region from the comparison","description":"For some Views, it may be impossible to guarantee a stable, consistent rendering. For instance, if the content is dynamic or randomized. For this reason, Testify provides the option to specify a series of rectangles to exclude from the comparison. All pixels in these rectangles are ignored and only pixels not contained will be compared.","sidebar":"tutorialSidebar"},"recipes/font-scale":{"id":"recipes/font-scale","title":"Changing the font scale in a test","description":"Testify allows you to change the current Activity scaling factor for fonts, relative to the base density scaling. This allows you to simulate the impact of a user modifying the default font size on their device, such as tiny, large or huge.","sidebar":"tutorialSidebar"},"recipes/gmd":{"id":"recipes/gmd","title":"Configuring Testify to run on Gradle managed device","description":"Starting from API levels","sidebar":"tutorialSidebar"},"recipes/intents":{"id":"recipes/intents","title":"Passing Intent extras to the Activity under test","description":"Some activities may require a Bundle of additional information called extras. Extras can be used to provide extended information to the component. For example, if we have a action to send an e-mail message, we could also include extra pieces of data here to supply a subject, body, etc.","sidebar":"tutorialSidebar"},"recipes/java":{"id":"recipes/java","title":"Writing a test in Java","description":"Testify is fully backwards compatible with Java.","sidebar":"tutorialSidebar"},"recipes/keyboard-focus":{"id":"recipes/keyboard-focus","title":"Placing the keyboard focus on a specific view","description":"As users can navigate your app using a keyboard (by pressing the TAB key, for example), it may be desirable to place the keyboard focus on a specific View prior to taking a screenshot.","sidebar":"tutorialSidebar"},"recipes/layout-inspector":{"id":"recipes/layout-inspector","title":"Debugging with the Layout Inspector","description":"You may use Android Studio\'s Layout Inspector  in conjunction with your screenshot test. It can sometimes be useful to pause your test so that you can capture the layout hierarchy for further debugging in Android Studio. In order to do so, set the pauseForInspection configuration property on the test rule to true. This will pause the test after all ViewModifications have been applied and prior to the screenshot being taken. The test is paused for 5 minutes, allowing plenty of time to capture the layout.","sidebar":"tutorialSidebar"},"recipes/layout-resource":{"id":"recipes/layout-resource","title":"Specifying a layout resource programmatically","description":"As an alternative to using the TestifyLayout annotation, you may also specific a layout file to be loaded programmatically.","sidebar":"tutorialSidebar"},"recipes/library-projects":{"id":"recipes/library-projects","title":"Configuring Testify for Android Library Projects","description":"An Android library  is structurally the same as an Android app module. It includes everything needed to build an app, including source code, resource files, and an Android manifest. So, it is often necessary to want to use screenshot testing with your library.","sidebar":"tutorialSidebar"},"recipes/locale":{"id":"recipes/locale","title":"Changing the Locale in a test","description":"API 24+","sidebar":"tutorialSidebar"},"recipes/multi-user":{"id":"recipes/multi-user","title":"Multi-user support","description":"Testify provides support for emulators running in multi-user configuration.","sidebar":"tutorialSidebar"},"recipes/orientation":{"id":"recipes/orientation","title":"Changing the orientation of the screen","description":"Use the orientation configuration to select between portrait and landscape mode.","sidebar":"tutorialSidebar"},"recipes/sdcard":{"id":"recipes/sdcard","title":"Configuring Testify to write to the SDCard","description":"By default, Testify will write baseline images to the data/data/com.application.package/app_images/ directory of your device emulator.","sidebar":"tutorialSidebar"},"recipes/software-rendering":{"id":"recipes/software-rendering","title":"Force software rendering","description":"In some instances it may be desirable to use the software renderer, not Android\'s default hardware renderer. Differences in GPU hardware from device to device (and emulators running on different architectures) may cause flakiness in rendering.","sidebar":"tutorialSidebar"},"recipes/testify-layout-library":{"id":"recipes/testify-layout-library","title":"Using @TestifyLayout with library projects","description":"The TestifyLayout annotation allows you to specify a layout resource to be automatically loaded into the host Activity for testing.","sidebar":"tutorialSidebar"},"recipes/tolerance":{"id":"recipes/tolerance","title":"Increase the matching tolerance","description":"In some cases, the captured screenshot may inherently contain randomness. It may then be desirable to allow for an inexact matching. By default, Testify employs an exact, pixel-by-pixel matching algorithm.","sidebar":"tutorialSidebar"},"recipes/view-provider":{"id":"recipes/view-provider","title":"Taking a screenshot of an area less than that of the entire Activity","description":"It is often desirable to capture only a portion of your screen or to capture a single View.","sidebar":"tutorialSidebar"}}}')}}]);