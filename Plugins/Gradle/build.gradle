plugins {
    id 'groovy'
    id 'kotlin'
    id 'org.jetbrains.dokka'
    id 'jacoco'
}

ext {
    pom = [
            publishedGroupId  : 'dev.testify',
            artifact          : 'dev.testify.gradle.plugin',
            libraryName       : 'testify-plugin',
            libraryDescription: 'Android screenshot instrumentation tests plugin.',
            siteUrl           : 'https://github.com/ndtp/android-testify',
            gitUrl            : 'https://github.com/ndtp/android-testify.git',
            licenseName       : 'The MIT License',
            licenseUrl        : 'https://opensource.org/licenses/MIT',
            author            : 'ndtp'
    ]
}

version = "$project.versions.testify"
group = pom.publishedGroupId
archivesBaseName = pom.artifact

sourceCompatibility = JavaVersion.VERSION_17

test {
    jacoco {
        enabled = true
    }
    finalizedBy jacocoTestReport
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

dependencies {
    implementation gradleApi()
    implementation libs.gradle
    implementation libs.kotlin.stdlib.jdk8

    testRuntimeOnly libs.junit.platform.launcher
    testImplementation gradleTestKit()
    testImplementation libs.junit.jupiter
    testImplementation libs.junit.jupiter.params
    testImplementation libs.mockk
    testImplementation libs.truth.v120
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

jar {
    manifest {
        attributes "Implementation-Title": "Testify"
        attributes "Implementation-Vendor": "ndtp"
        attributes "Implementation-Version": archiveVersion
    }
}

task configureLocal {
    doFirst {
        version = "local"
        jar.manifest.attributes.put("Implementation-Version", version)
    }
}

task copyLocal(type: Copy) {
    from "$buildDir/libs/${project.name}-local.jar"
    into 'jar'
}

task assembleLocal(description: 'Assembles the outputs of this project for use locally.', group: 'Build') {
    dependsOn configureLocal
    dependsOn build
    dependsOn copyLocal

    build.mustRunAfter configureLocal
    copyLocal.mustRunAfter build
}

task sourcesJar(type: Jar) {
    from sourceSets.main.groovy.srcDirs
    archiveClassifier = 'sources'
}

apply from: "../../publish.build.gradle"
apply from: '../../ktlint.gradle'

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
