plugins {
    id 'groovy'
    id 'kotlin'
    id 'org.jetbrains.dokka'
}

ext {
    pom = [
        publishedGroupId  : 'dev.testify',
        artifact          : 'plugin',
        libraryName       : 'testify-plugin',
        libraryDescription: 'Android screenshot instrumentation tests plugin.',
        siteUrl           : 'https://github.com/ndtp/android-testify',
        gitUrl            : 'https://github.com/ndtp/android-testify.git',
        licenseName       : 'The MIT License',
        licenseUrl        : 'https://opensource.org/licenses/MIT',
        author            : 'ndtp'
    ]
}

version = "$project.versions.testify"
group = pom.publishedGroupId
archivesBaseName = pom.artifact

// Not able to upgrade gradle android plugin with this in place, Java 11 works, not sure if safe
sourceCompatibility = JavaVersion.VERSION_11

test {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        outputs.upToDateWhen { false }
        showStandardStreams = true
    }
}

dependencies {
    implementation "com.android.tools.build:gradle:${versions.androidGradlePlugin}"
    implementation gradleApi()
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

jar {
    manifest {
        attributes "Implementation-Title": "Testify"
        attributes "Implementation-Vendor": "ndtp"
        attributes "Implementation-Version": archiveVersion
    }
}

task configureLocal {
    doFirst {
        version = "local"
        jar.manifest.attributes.put("Implementation-Version", version)
    }
}

task copyLocal(type: Copy) {
    from "$buildDir/libs/${project.name}-local.jar"
    into 'jar'
}

task assembleLocal(description: 'Assembles the outputs of this project for use locally.', group: 'Build') {
    dependsOn configureLocal
    dependsOn build
    dependsOn copyLocal

    build.mustRunAfter configureLocal
    copyLocal.mustRunAfter build
}
//
//task sourcesJar(type: Jar) {
//    from sourceSets.main.groovy.srcDirs
//    classifier = 'sources'
//}

apply from: "../../publish.build.gradle"
apply from: '../../ktlint.gradle'
